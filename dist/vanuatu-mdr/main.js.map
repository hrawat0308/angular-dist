{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/otp/otp.component.ts","./src/app/components/otp/otp.component.html","./src/app/components/password/password.component.ts","./src/app/components/password/password.component.html","./src/app/components/setPassword/setPassword.component.ts","./src/app/components/setPassword/setPassword.component.html","./src/app/dialog/add-user/add-user.component.ts","./src/app/dialog/add-user/add-user.component.html","./src/app/dialog/cancelPatientsReg/cancelPatients.component.ts","./src/app/dialog/cancelPatientsReg/cancelPatients.component.html","./src/app/dialog/changePassword/changePassword.component.ts","./src/app/dialog/changePassword/changePassword.component.html","./src/app/dialog/deactive-user/deactive-user.component.ts","./src/app/dialog/deactive-user/deactive-user.component.html","./src/app/dialog/issue-device/issue-device.component.ts","./src/app/dialog/issue-device/issue-device.component.html","./src/app/dialog/logoutConfirm/logoutConfirm.component.ts","./src/app/dialog/logoutConfirm/logoutConfirm.component.html","./src/app/dialog/recommendation-device-remove/recommend-device.component.ts","./src/app/dialog/recommendation-device-remove/recommend-device.component.html","./src/app/dialog/remove-device/remove-device.component.ts","./src/app/dialog/remove-device/remove-device.component.html","./src/app/dialog/remove-file/remove-file.component.ts","./src/app/dialog/remove-file/remove-file.component.html","./src/app/dialog/view-device/view-device.component.ts","./src/app/dialog/view-device/view-device.component.html","./src/app/directives/trim-on-blur/trim-on-blur.directive.ts","./src/app/directives/trim-on-blur/trim-on-blur.module.ts","./src/app/services/main.service.ts","./src/app/services/main_local.service.ts","./src/app/shared/auth.guard.ts","./src/app/shared/auth.service.ts","./src/app/shared/custom-validators.ts","./src/app/shared/device.pipe.ts","./src/app/shared/shared.service.ts","./src/app/sidenav/sidenav.component.ts","./src/app/sidenav/sidenav.component.html","./src/app/toolbar/toolbar.component.ts","./src/app/toolbar/toolbar.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { OtpComponent } from './components/otp/otp.component';\nimport { SetPasswordComponent } from './components/setPassword/setPassword.component';\nimport { AuthGuard } from './shared/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: 'main',\n    loadChildren: () =>\n      import('./main-nav/main-nav.module').then((m) => m.MainNavModule), canActivate: [AuthGuard]\n  },\n  {\n    path: '',\n    component: LoginComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent\n      }\n    ]\n  },\n  {\n    path: '',\n    component: PasswordComponent,\n    children: [\n      {\n        path: 'password',\n        component: PasswordComponent\n      }\n    ]\n  },\n  {\n    path: '',\n    component: OtpComponent,\n    children: [\n      {\n        path: 'otpverify',\n        component: OtpComponent\n      }\n    ]\n  },\n  {\n    path: '',\n    component: SetPasswordComponent,\n    children: [\n      {\n        path: 'set-password',\n        component: SetPasswordComponent\n      }\n    ]\n  },\n  { path: '**', redirectTo: 'login'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { \n\n  constructor(){\n    console.log(\"routing constructor\");\n  \n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { fromEvent, Observable, Subscription } from 'rxjs';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n\n  onlineEvent!: Observable<Event>;\n  offlineEvent!: Observable<Event>;\n  subscriptions: Subscription[] = [];\n  connectionStatusMessage!: string;\n  connectionStatus!: string;\n\nconstructor( \n  private location: LocationStrategy,\n  private snackbar: MatSnackBar\n  ){\n    history.pushState(null, 'null', window.location.href);  \n    this.location.onPopState(() => {\n    history.pushState(null, 'null', window.location.href);\n});\n}\n\nngOnInit(): void {\n  this.onlineEvent = fromEvent(window, 'online');\n  this.offlineEvent = fromEvent(window, 'offline');\n\n  this.subscriptions.push(this.onlineEvent.subscribe(e => {\n    this.connectionStatusMessage = 'Back to online';\n    this.connectionStatus = 'online';\n    this.snackbar.open( this.connectionStatusMessage, '',{duration: 3000,panelClass: ['online'],});\n  }));\n\n  this.subscriptions.push(this.offlineEvent.subscribe(e => {\n    this.connectionStatus = 'offline';\n    this.snackbar.open( 'Connection lost! You are not connected to internet', '',{panelClass:['offline']});\n  }));\n  \n}\n\n\n\n}\n","\n <router-outlet></router-outlet>\n <ngx-spinner type=\"ball-scale-multiple\"></ngx-spinner>\n","import { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatButtonModule} from '@angular/material/button';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MAT_DATE_LOCALE,MatRippleModule } from '@angular/material/core'\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport { DatePipe } from '@angular/common';\nimport {DevicePipeGlobal} from '../app/shared/device.pipe'\n\n\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { OtpComponent } from './components/otp/otp.component';\nimport { SetPasswordComponent } from './components/setPassword/setPassword.component';\nimport { CancelPatientsComponent } from './dialog/cancelPatientsReg/cancelPatients.component';\nimport {LogoutConfirmComponent} from './dialog/logoutConfirm/logoutConfirm.component';\nimport { ChangePasswordComponent } from './dialog/changePassword/changePassword.component';\n\n\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { NgxOtpInputModule } from \"ngx-otp-input\";\nimport { IssueDeviceComponent } from './dialog/issue-device/issue-device.component';\nimport { RemoveDeviceComponent } from './dialog/remove-device/remove-device.component';\nimport { RemoveFileComponent } from './dialog/remove-file/remove-file.component';\nimport { ViewDeviceComponent } from './dialog/view-device/view-device.component';\nimport {RecommendRemoveDeviceComponent} from './dialog/recommendation-device-remove/recommend-device.component'\nimport { AddUserComponent } from './dialog/add-user/add-user.component';\nimport { DeactiveUserComponent } from './dialog/deactive-user/deactive-user.component';\nimport { TrimOnBlurModule } from './directives/trim-on-blur/trim-on-blur.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidenavComponent,\n    ToolbarComponent,\n    LoginComponent,\n    PasswordComponent,\n    OtpComponent,\n    SetPasswordComponent,\n    CancelPatientsComponent,\n    LogoutConfirmComponent,\n    ChangePasswordComponent,\n    IssueDeviceComponent,\n    RemoveDeviceComponent,\n    ViewDeviceComponent,\n    RecommendRemoveDeviceComponent,\n    AddUserComponent,\n    DeactiveUserComponent,\n    DevicePipeGlobal,\n    RemoveFileComponent\n    ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatButtonModule,\n    LayoutModule,\n    MatListModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,  \n    MatInputModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    ClipboardModule,\n    NgxOtpInputModule,\n    NgxSpinnerModule.forRoot({ type: 'ball-scale-multiple' }),\n    TrimOnBlurModule\n  ],\n  providers: [ { provide: MAT_DATE_LOCALE, useValue: 'en-GB'},DatePipe],\n  bootstrap: [AppComponent],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { AfterViewInit, Component, OnInit} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {  Observable } from 'rxjs';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { SharedService } from '../../shared/shared.service';\nimport { HttpService } from '../../services/main_local.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n\n})\nexport class LoginComponent implements OnInit,AfterViewInit {\n  loginForm!: FormGroup;\n  mobileNumber:any;\n  countryCode:any = '+678';\n  authToken: any = null; \n  isHandset$: Observable<boolean> = this.sharedService.isHandset()\n  role:any;\n\n\n  constructor(\n     private fb: FormBuilder,\n     private router : Router,\n     private spinner: NgxSpinnerService,\n     private sharedService : SharedService,\n     private snackBar:MatSnackBar,\n     private route : ActivatedRoute,\n     private httpService : HttpService) { \n\n    }\n\n  hide = true;\n  ngOnInit(): void {\n    this.spinner.show();\n    this.loginForm = this.fb.group({\n      mobileNumber: ['',[Validators.required,Validators.minLength(5),Validators.maxLength(10)]],\n    });\n    let mdr_token = localStorage.getItem(\"mdr-token\")\n    let auth_token =  localStorage.getItem(\"mdr-token-auth\")\n    this.role = localStorage.getItem(\"display-role\");\n    if(mdr_token && auth_token) {\n      if(this.role == 'Analyst' || this.role == 'Admin') {\n        this.router.navigate(['/main/users/list']);\n      } else {\n        this.router.navigate(['main/patients/patientslist'])\n      }\n    }\n    this.spinner.hide();\n  }\n\n  ngAfterViewInit(): void {\n    console.log(\"login\");\n  }\n\n  clear(){\n    this.mobileNumber = null;\n  }\n\n  keyPressNumber(event:any) {\n    let test = String.fromCharCode(event.keyCode);\n    if (/\\d/.test(test)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n\n  onSubmit(){\n    this.spinner.show();\n    const body: any = {\n      \"mobileNumber\": this.mobileNumber,\n      \"isdCode\": this.countryCode,\n      \"isMobile\": false,\n      \"forgotPass\": false\n    }\n    this.httpService.postRequestCall('auth/verifyUser', body, this.authToken, {}).subscribe({\n      next: (value)=>{\n        this.spinner.hide();\n        let data:any = value;\n        this.snackBar.open((data?.message), '', {\n          horizontalPosition: 'center',\n          verticalPosition: 'bottom',\n          duration: 3 * 1000,\n        });\n        if(data.data.otpPage == true){\n        this.router.navigate(['otpverify'],{relativeTo:this.route,queryParams:{mob:this.loginForm.get('mobileNumber')?.value}});\n        } else {\n          this.router.navigate(['password'],{relativeTo:this.route,queryParams:{mob:this.loginForm.get('mobileNumber')?.value}});\n        }\n      },\n      error:(err)=>{\n        this.errorStatus(err);\n      }\n    })\n  }\n\n  forgotPassword(){\n    this.router.navigate(['forgot-password'])\n  }\n\n  errorStatus(error:any){\n    this.spinner.hide();\n    let msg;\n    if(error.error.message) {\n      msg = error.error.message;\n    } else {\n      msg = 'Internal server error'\n    }\n    this.snackBar.open(msg, '', {\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      duration: 3 * 1000,\n    });\n  }\n}\n","<div class=\"loginContainer \">\n<mat-card class=\"mat-elevation-z2\" [ngClass]=\"{'loginCard ': !(isHandset$ | async) , 'loginCardHandset': (isHandset$ | async) }\" >\n \n  <form id=\"formContainer\"  [formGroup]=\"loginForm\" >\n    <div  [ngClass]=\"{'headerImageWeb': !(isHandset$ | async) , 'headerImageHandset': (isHandset$ | async) }\" class=\"headerFlex\"  style=\"display: flex\">\n      <img src=\"assets/logo.png\" alt=\"MDR logo\" >\n  </div>\n  <div style=\"display: flex; color: #000000; opacity: 0.8; padding-top: 20px;\" class=\"mat-display-4\">\n    Vanuatu Medical Disability Registry\n   </div>\n  <div style=\"display: flex;  opacity: 0.8; color: #000000;  padding-top: 28px;\" class=\"mat-subheading-1\">\n    Login with phone number\n   </div>\n    <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 72%; padding-top: 40px;\">\n      <mat-label>Mobile Number</mat-label>\n      <span matPrefix style=\"opacity: 0.38;\">+678 &nbsp;</span>\n      <input matInput  #mobileInput maxlength=\"10\" minlength=\"5\" [(ngModel)]=\"mobileNumber\"  (keypress)=\"keyPressNumber($event)\"  (focus)=\"this.loginForm.controls['mobileNumber'].markAsTouched();\"\n       formControlName=\"mobileNumber\" name=\"mobileNumber\"  required>\n       <div  style=\"cursor:pointer\" mat-icon-button matSuffix *ngIf=\"(loginForm.controls['mobileNumber'].invalid && loginForm.controls['mobileNumber'].touched)\" >\n        <mat-icon style=\"color: red;\">   \n          <span class=\"material-icons-outlined\">\n            error_outline\n          </span>\n        </mat-icon> \n      </div>\n      <div  style=\"cursor:pointer\" mat-icon-button matSuffix *ngIf=\"!(loginForm.controls['mobileNumber'].invalid && loginForm.controls['mobileNumber'].touched) && this.mobileNumber\" (click)=\"clear()\">\n        <mat-icon  class=\"material-icons-outlined\">\n          cancel\n        </mat-icon>\n      </div>\n      <mat-hint class=\"error-hint\" \n      *ngIf=\"(loginForm.controls['mobileNumber'].hasError('minlength') && loginForm.controls['mobileNumber'].touched)\" >Enter a valid mobile number\n    </mat-hint>\n    </mat-form-field>\n    <div class=\"action-area\" style=\"padding-top: 24px;\">\n      <button  (click)=\"onSubmit()\" mat-raised-button [ngClass]=\"{'login-btn': !loginForm.invalid ,'login-btn-disabled':loginForm.invalid}\" [disabled]=\"loginForm.invalid\">\n         <span [ngClass]=\"{'login-btn': !loginForm.invalid ,'login-btn-disabled':loginForm.invalid}\">VERIFY</span>\n      </button>\n    </div>\n\n</form>\n</mat-card>\n\n</div> \n","import { AfterViewInit, Component, OnInit,  HostListener } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxOtpInputConfig } from 'ngx-otp-input';\nimport { Observable, timer, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { SharedService } from '../../shared/shared.service';\nimport { HttpService } from '../../services/main_local.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n\n\n@Component({\n  selector: 'app-otp',\n  templateUrl: './otp.component.html',\n  styleUrls: ['./otp.component.scss'],\n\n})\nexport class OtpComponent implements OnInit,AfterViewInit {\n\n\n  countDown: Subscription;\n  counter :any;\n  tick:any;\n  isForgotPassword: boolean = false;\n  isOtp:boolean = true;\n  validOtp:boolean = true;\n  errorStatus:any = \"success\";\n  loginForm!: FormGroup;\n  mobileNumber:any;\n  otp:any;\n  authToken: any = null; \n  countryCode:any = '+678'\n  isHandset$: Observable<boolean> = this.sharedService.isHandset()\n  otpInputConfig: NgxOtpInputConfig = {\n    otpLength: 6,\n    autofocus: true,\n    classList: {\n      inputBox: 'my-super-box-class',\n      input: 'my-super-class',\n      inputFilled: 'my-super-filled-class',\n      inputDisabled: 'my-super-disable-class',\n      inputSuccess: 'my-super-success-class',\n      inputError: 'my-super-error-class',\n    },\n  };\n\n  constructor(\n     private fb: FormBuilder,\n     private router : Router,\n     private route : ActivatedRoute,\n     private dialog : MatDialog,\n     private httpService : HttpService,\n     private snackBar:MatSnackBar,\n     private spinner: NgxSpinnerService,\n     private sharedService : SharedService) { \n\n    }\n    @HostListener(\"window:beforeunload\", [\"$event\"]) unloadHandler(event: Event) {\n      let result = confirm(\"Changes you made may not be saved.\");\n      if (result) {\n        // Do more processing...\n      }\n      event.returnValue = false; // stay on same page\n    }\n\n  hide = true;\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n    });\n    this.route.queryParams.subscribe((params) => {\n      this.mobileNumber = params['mob']; \n    });\n    this.countTimer();\n    this.loginForm.setErrors({ 'invalid': false });\n  }\n\n  transform(value: number): string {\n    const minutes: number = Math.floor(value / 60);\n    return (\n      ('00' + minutes).slice(-2) +\n      ':' +\n      ('00' + Math.floor(value - minutes * 60)).slice(-2)\n    );\n  }\n\n  countTimer(){\n    this.counter = 120;\n    this.tick =1000;\n    this.countDown = timer(0, this.tick)\n    .pipe(take(this.counter))\n    .subscribe(() => {\n      --this.counter;\n      if (this.counter == 0) {\n        this.countDown.unsubscribe();\n      }\n    });\n  } \n  \n  ngAfterViewInit(): void {\n    console.log(\"afterViewInit\");\n  }\n\n\n  handeOtpChange(value: any): void {\n    this.validOtp = true;\n    if(value[5] != null && value[5] != ''){\n      this.isOtp = false;\n    } else {\n      this.isOtp = true;\n    }\n  }\n\n  handleFillEvent(value: any): void {\n    this.otp = value;\n    this.isOtp = false;\n    this.errorStatus = \"error\"\n  }\n\n  onVerify(){\n    this.spinner.show();\n    const body: any = {\n      \"isdCode\": this.countryCode,\n      \"mobileNumber\": this.mobileNumber,\n      \"otp\": this.otp,\n      \"isMobile\": false\n    }\n    this.httpService.postRequestCall('auth/otp', body, this.authToken, {}).subscribe({\n      next: (value)=>{\n        this.spinner.hide();\n        let data:any = value;\n        this.snackBar.open((data?.message), '', {\n          horizontalPosition: 'center',\n          verticalPosition: 'bottom',\n          duration: 3 * 1000,\n        });\n        this.router.navigate(['set-password'],{relativeTo:this.route,queryParams:{mob:this.mobileNumber}});\n      },\n      error:(err)=>{\n        this.validOtp = false;\n        this.errorStatusFun(err);\n      }\n    })\n  }\n\n  onResend() {\n    if(window.navigator.onLine) {\n    this.spinner.show();\n    const body: any = {\n      \"mobileNumber\": this.mobileNumber,\n      \"isdCode\": this.countryCode,\n      \"isMobile\": true,\n      \"forgotPass\": false\n    }\n    this.httpService.postRequestCall('auth/verifyUser', body, this.authToken, {}).subscribe({\n      next: (value)=>{\n        this.spinner.hide();\n        let data:any = value;\n        this.snackBar.open('OTP sent to your registered contact detail', '', {\n          horizontalPosition: 'center',\n          verticalPosition: 'bottom',\n          duration: 3 * 1000,\n        });\n        this.countTimer();\n      },\n      error:(err)=>{\n        this.errorStatus(err);\n      }\n    })\n  } else {\n    this.snackBar.open('Please check your internet connection', '', {\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      duration: 3 * 1000,\n    });\n  }\n}\n\n\n  back() {\n    this.router.navigate(['login']);\n  }\n\n  errorStatusFun(error:any){\n    this.spinner.hide();\n    this.snackBar.open((error.error.message), '', {\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      duration: 3 * 1000,\n    });\n  }\n  \n\n}\n","<div class=\"otpContainer \">\n   \n    <mat-card class=\"mat-elevation-z2\" [ngClass]=\"{'loginCard ': !(isHandset$ | async) , 'loginCardHandset': (isHandset$ | async) }\" >\n     \n      <form id=\"formContainer\"  [formGroup]=\"loginForm\" >\n        <div  [ngClass]=\"{'headerImageWeb': !(isHandset$ | async) , 'headerImageHandset': (isHandset$ | async) }\" class=\"headerFlex\" >\n          <img src=\"assets/logo.png\" alt=\"mdr logo\" >\n       </div>\n       <div style=\"display: flex; color: #000000; opacity: 0.8; padding-top: 20px;\" class=\"mat-display-4\">\n        Vanuatu Medical Disability Registry\n       </div>\n       <div  class=\"mat-subheading-1\" style=\"color: #000000;  opacity: 0.8; padding-top: 24px;\" >\n        Enter the OTP we sent to \n       </div>\n       <div  class=\"mat-subheading-1\" style=\"padding-top: 4px;\">\n         {{this.mobileNumber}}\n       </div>\n       <div style=\"padding-top: 36px;\">\n        <ngx-otp-input [config]=\"otpInputConfig\" [status] = \"errorStatus\" (otpChange)=\"handeOtpChange($event)\" (fill)=\"handleFillEvent($event)\">\n        </ngx-otp-input>\n       </div>\n       <div style=\"color:#006C4C;padding-top: 16px;\" class=\"mat-headline\" *ngIf=\"counter != 0\">{{transform(counter)}}</div>\n       <div class=\"action-area\" style=\"padding-top: 16px;\" *ngIf=\"counter == 0\">\n        <button  (click)=\"onResend()\" mat-raised-button style=\"background-color: #7E9689;\"> <span style=\"color: #000000; opacity: 0.87;\">RESEND OTP</span> </button>\n      </div>\n       <div class=\"action-area\" style=\"padding-top: 16px;\">\n        <button  (click)=\"onVerify()\" mat-raised-button [ngClass]=\"{'verify-btn': !this.otp ,'verify-btn-disabled':isOtp}\"  [disabled]=\"isOtp\"> \n            <span [ngClass]=\"{'verify-btn': !this.otp ,'verify-btn-disabled':isOtp}\">VERIFY</span> \n        </button>\n      </div>\n      <div style=\"padding-top: 12px;\"><span class=\"mat-body-2 back\"  (click)=\"back()\">BACK</span></div>\n    </form>\n    </mat-card> \n    </div>","import { AfterViewInit, Component, OnInit} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {  Observable } from 'rxjs';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PasswordValidator } from '../../shared/custom-validators';\nimport { SharedService } from '../../shared/shared.service';\nimport { HttpService } from '../../services/main_local.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n\n})\nexport class PasswordComponent implements OnInit,AfterViewInit {\n  passwordForm!: FormGroup;\n  useid:any;\n  password:any;\n  authToken: any = null; \n  countryCode:any = '+678';\n  mobileNumber:any;\n  isHandset$: Observable<boolean> = this.sharedService.isHandset()\n\n\n  constructor(\n     private fb: FormBuilder,\n     private router : Router,\n     private spinner: NgxSpinnerService,\n     private sharedService : SharedService,\n     private snackBar:MatSnackBar,\n     private route : ActivatedRoute,\n     private httpService : HttpService) { \n\n    }\n\n  hide = true;\n  ngOnInit(): void {\n    this.passwordForm = this.fb.group({\n      password: ['',[Validators.required, PasswordValidator]],\n    });\n    this.route.queryParams.subscribe((params) => {\n      this.mobileNumber = params['mob']; \n    });\n  }\n\n  ngAfterViewInit(): void {\n    console.log(\"login\");\n  }\n\n\n  keyPressAlphaNumeric(event:any) {\n\n    let inp = String.fromCharCode(event.keyCode);\n\n    if (/[a-zA-Z0-9]/.test(inp)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n  keyPressPassword(event:any){\n    let inp = String.fromCharCode(event.keyCode);\n  \n    if (/[><,:;^'\"]/.test(inp)) {\n      event.preventDefault();\n      return false;\n    } else {\n      \n      return true;\n    }\n  }\n  onSubmit(){\n    this.spinner.show();\n    const body: any = {\n      \"mobileNumber\": this.mobileNumber,\n      \"isdCode\": this.countryCode,\n      \"password\": this.passwordForm.get('password')?.value\n    }\n\n    this.httpService.postRequestCall('auth/login', body, this.authToken, {}).subscribe(\n      {\n       next: (value:any) => {  \n        let val:any = value;\n        this.spinner.hide();\n        this.snackBar.open((val?.message), '', {\n          horizontalPosition: 'center',\n          verticalPosition: 'bottom',\n          duration: 3 * 1000,\n        });\n        let display_role:any;\n        if(value?.data.roles[0] == '6868009'){\n          display_role = \"Admin\";\n        }\n        if(value?.data.roles[0] == 'doctor'){\n          display_role = \"Healthcare provider\";\n        }\n        if(value?.data.roles[0] == '224608005'){\n          display_role = \"Front office staff\";\n        }\n        if(value?.data.roles[0] == '224529009'){\n          display_role = \"Device Issuer\";\n        }\n        if(value?.data.roles[0] == 'ict'){\n          display_role = \"Analyst\";\n        }\n        localStorage.setItem('mdr-token',value?.data.token);\n        localStorage.setItem('mdr-token-auth',value?.data.token);\n        localStorage.setItem('patient-session',value?.data.sessionId);\n        localStorage.setItem('patient-number','0');\n        localStorage.setItem('userId',value?.data.userId);\n        localStorage.setItem('userName',value?.data.username);\n        localStorage.setItem('role',value?.data.roles[0]);\n        localStorage.setItem(\"display-role\",display_role);\n        localStorage.setItem('contactNumber',value?.data.contactNumber);\n        if(value?.data.roles[0] == 'ict' || value?.data.roles[0] == '6868009'){\n          this.router.navigate(['main/users/list'])\n        }\n        else{\n          this.router.navigate(['main/patients/patientslist'])\n        }\n       },\n       error: (err) => {\n        this.errorStatusFun(err);\n        if(err.error.message == 'Too many attempts. Please try after 5 mins') {\n          this.router.navigate(['login'])\n        }\n       },\n   });\n   \n  }\n\n  forgotPassword(){\n    this.spinner.show();\n    const body: any = {\n      \"mobileNumber\": this.mobileNumber,\n      \"isdCode\": this.countryCode,\n      \"isMobile\": true,\n      \"forgotPass\":true\n    }\n    this.httpService.postRequestCall('auth/verifyUser', body, this.authToken, {}).subscribe({\n      next: (value)=>{\n        this.spinner.hide();\n        let data:any = value;\n        this.snackBar.open((data?.message), '', {\n          horizontalPosition: 'center',\n          verticalPosition: 'bottom',\n          duration: 3 * 1000,\n        });\n        this.router.navigate(['otpverify'],{relativeTo:this.route,queryParams:{mob:this.mobileNumber}});\n      },\n      error:(err)=>{\n        this.errorStatusFun(err);\n      }\n    })\n      \n  }\n\n  errorStatusFun(error:any){\n    this.spinner.hide();\n    this.snackBar.open((error.error.message), '', {\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      duration: 3 * 1000,\n    });\n  }\n\n  back(){\n    this.router.navigate(['login'])\n  }\n\n}\n","<div class=\"passwordContainer\">\n    <mat-card class=\"mat-elevation-z2\" [ngClass]=\"{'loginCard ': !(isHandset$ | async) , 'loginCardHandset': (isHandset$ | async) }\" >\n     \n      <form id=\"formContainer\"  [formGroup]=\"passwordForm\" >\n        <div  [ngClass]=\"{'headerImageWeb': !(isHandset$ | async) , 'headerImageHandset': (isHandset$ | async) }\" class=\"headerFlex\"  style=\"display: flex\">\n          <img src=\"assets/logo.png\" alt=\"MDR logo\" >\n      </div>\n      <div style=\"display: flex; color: #000000; opacity: 0.8; padding-top: 20px;\" class=\"mat-display-4\">\n        Vanuatu Medical Disability Registry\n       </div>\n      <div style=\"display: flex; color: #000000; opacity: 0.8; padding-top: 28px;\" class=\"mat-subheading-1\">\n        Enter the password\n       </div>\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 80%; padding-top: 40px;\">\n            <mat-label>Password</mat-label>\n            <input (focus)=\"this.passwordForm.controls['password'].markAsTouched();\" (keydown.space)=\"$event.preventDefault()\" matInput maxlength=\"15\" #passwordInput \n            [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" (keypress)=\"keyPressPassword($event)\">\n            <div  style=\"cursor:pointer\" mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" >\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </div>\n      \n            <mat-hint class=\"error-hint\"  [ngClass]=\"{'error-hint': (this.passwordForm.controls['password'].hasError('invalidPassword') \n            && this.passwordForm.controls['password'].touched) , 'normal-hint': !(this.passwordForm.controls['password'].hasError('invalidPassword') \n            && this.passwordForm.controls['password'].touched) }\">\n           <span> 8-15 characters, with at least one number, special, uppercase, and lowercase characters</span>\n            </mat-hint>\n        </mat-form-field>\n        <div class=\"action-area\" style=\"padding-top: 44px;\">\n          <button  (click)=\"onSubmit()\" mat-raised-button [ngClass]=\"{'login-btn': !this.passwordForm.invalid ,'login-btn-disabled':this.passwordForm.invalid}\" [disabled]=\"this.passwordForm.invalid\">\n             <span [ngClass]=\"{'mat-button': !this.passwordForm.invalid ,'mat-button-disabled':this.passwordForm.invalid}\">VERIFY</span>\n          </button>\n        </div>\n        <div class=\"action-area\" style=\"padding-top: 20px;\">\n          <button  (click)=\"forgotPassword()\" mat-raised-button style=\"background-color: #7E9689;\"> <span style=\"color: #000000; opacity: 0.87;\">FORGOT PASSWORD</span> </button>\n        </div>\n        <div style=\"padding-top: 20px;\"><span class=\"mat-body-2 back\"  (click)=\"back()\">BACK</span></div>\n    </form>\n    </mat-card>\n    \n    </div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable} from 'rxjs';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { PasswordValidator, passwordMatchValidator } from '../../shared/custom-validators';\nimport { SharedService } from '../../shared/shared.service';\nimport { HttpService } from '../../services/main_local.service';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-set-password',\n  templateUrl: './setPassword.component.html',\n  styleUrls: ['./setPassword.component.scss']\n})\nexport class SetPasswordComponent implements OnInit {\n  setPasswordForm!: FormGroup;\n  id:any;\n  authToken: any = null; \n  isHandset$: Observable<boolean> = this.sharedService.isHandset()\n\n  constructor(    \n    private fb: FormBuilder,\n    private router : Router,\n    private route : ActivatedRoute,\n    private spinner: NgxSpinnerService,\n    private snackBar:MatSnackBar,\n    private httpService : HttpService,\n    private sharedService : SharedService) { }\n    hide = true;\n    confirmhide = true;\n    flag:any;\n    mobileNumber:any;\n    countryCode:any = '+678'\n    ngOnInit(): void {\n    this.setPasswordForm= this.fb.group(\n      {\n      password: ['', [Validators.required, PasswordValidator]],\n      confirmPassword: ['', [Validators.required,PasswordValidator, passwordMatchValidator('password')]],\n     },\n    );\n\n    this.route.queryParams.subscribe((params) => {\n      this.id = +params['id'];\n      this.flag = params['flag'];\n      this.mobileNumber = params['mob'];\n    });\n  }\n  ngAfterViewInit(): void {\n    console.log(\"afterViweInit\");\n  }\n\n  keyPressPassword(event:any){\n    let inp = String.fromCharCode(event.keyCode);\n  \n    if (/[><,:;^'\"]/.test(inp)) {\n      event.preventDefault();\n      return false;\n    } else {\n      \n      return true;\n    }\n  }\n\n  cancel(){\n      this.router.navigate(['/login'])\n  }\n\n  onSave(){\n    this.spinner.show();\n    const body: any = {\n      \"isdCode\": this.countryCode,\n      \"mobileNumber\": this.mobileNumber,\n      \"newPassword\": this.setPasswordForm.get('password')?.value\n    }\n    this.httpService.postRequestCall('auth/setPassword', body, this.authToken, {}).subscribe({\n      next: (value)=>{\n        let val:any = value;\n        this.spinner.hide();\n        this.snackBar.open((val?.message), '', {\n          horizontalPosition: 'center',\n          verticalPosition: 'bottom',\n          duration: 3 * 1000,\n        });\n        this.router.navigate(['/login'])\n      },\n      error:(err)=>{\n        this.errorStatusFun(err);\n      }\n    })\n  }\n  errorStatusFun(error:any){\n    this.spinner.hide();\n    this.snackBar.open((error.error.message), '', {\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      duration: 3 * 1000,\n    });\n  }\n}\n","<div   class=\"setpasswordContainer\">\n   \n    <!-- <div  > -->\n    <mat-card class=\"mat-elevation-z2\" [ngClass]=\"{'loginCard ': !(isHandset$ | async) , 'loginCardHandset': (isHandset$ | async) }\" >\n     \n      <form id=\"formContainer\"  [formGroup]=\"setPasswordForm\" >\n        <div  [ngClass]=\"{'headerImageWeb': !(isHandset$ | async) , 'headerImageHandset': (isHandset$ | async) }\" class=\"headerFlex\" >\n          <img src=\"assets/logo.png\" alt=\"mdr logo\" >\n      </div>\n      <div style=\"display: flex; color: #000000; opacity: 0.8; padding-top: 16px;\" class=\"mat-display-4\">\n        Vanuatu Medical Disability Registry\n       </div>\n       <div style=\"padding-top: 20px; color: #000000; opacity: 0.8;\" class=\"mat-subheading-1\">\n        Create New Password\n       </div>\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 80%; padding-top: 24px;\">\n          <mat-label>Password</mat-label>\n          <input (focus)=\"this.setPasswordForm.controls['password'].markAsTouched();\" (keydown.space)=\"$event.preventDefault()\" matInput maxlength=\"15\" #passwordInput \n          [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" (keypress)=\"keyPressPassword($event)\">\n          <div  style=\"cursor:pointer\" mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"  *ngIf=\"!(setPasswordForm.controls['password'].invalid && setPasswordForm.controls['password'].touched)\">\n            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </div>\n          <div  style=\"cursor:pointer\" mat-icon-button matSuffix *ngIf=\"(setPasswordForm.controls['password'].invalid && setPasswordForm.controls['password'].touched)\" >\n            <mat-icon style=\"color: red;\">   \n              <span class=\"material-icons-outlined\">\n                error_outline\n              </span>\n            </mat-icon>\n          </div>\n          <mat-hint class=\"error-hint\"  [ngClass]=\"{'error-hint': (setPasswordForm.controls['password'].hasError('invalidPassword') \n          && setPasswordForm.controls['password'].touched) , 'normal-hint': !(setPasswordForm.controls['password'].hasError('invalidPassword') \n          && setPasswordForm.controls['password'].touched) }\">8-15 characters, with at least one number, special, uppercase, and lowercase characters\n          </mat-hint>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"margin-top: 12px;\" style=\"width: 80%; padding-top: 16px;\">\n            <mat-label>Confirm Password</mat-label>\n            <input (focus)=\"this.setPasswordForm.controls['confirmPassword'].markAsTouched();\" (keydown.space)=\"$event.preventDefault()\" matInput maxlength=\"15\" #passwordInput \n            [type]=\"confirmhide ? 'password' : 'text'\" formControlName=\"confirmPassword\" (keypress)=\"keyPressPassword($event)\">\n            <div  style=\"cursor:pointer\" mat-icon-button matSuffix (click)=\"confirmhide = !confirmhide\" [attr.aria-label]=\"'Hide password'\" *ngIf=\"!(setPasswordForm.controls['confirmPassword'].invalid && setPasswordForm.controls['confirmPassword'].touched)\">\n              <mat-icon>{{confirmhide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </div>\n            <div  style=\"cursor:pointer\" mat-icon-button matSuffix *ngIf=\"(setPasswordForm.controls['confirmPassword'].invalid && setPasswordForm.controls['confirmPassword'].touched)\" >\n              <mat-icon style=\"color: red;\">   \n                <span class=\"material-icons-outlined\">\n                  error_outline\n                </span>\n              </mat-icon>\n            </div>\n            <mat-hint class=\"error-hint\" \n            *ngIf=\"setPasswordForm.controls['confirmPassword'].hasError('mismatch') && !(setPasswordForm.controls['confirmPassword'].hasError('invalidPassword') )\">Password do not match\n            </mat-hint>\n          </mat-form-field>\n        <div class=\"action-area\">\n        \n          <button  [ngClass]=\"{'login-btn': !setPasswordForm.invalid ,'login-btn-disabled':setPasswordForm.invalid}\"  [disabled]=\"setPasswordForm.invalid\" (click)=\"onSave()\" \n          mat-raised-button> \n          <span [ngClass]=\"{'mat-button': !setPasswordForm.invalid ,'mat-button-disabled':setPasswordForm.invalid}\" >SAVE</span>\n          </button>\n\n          <div class=\"cancel\"><span class=\"mat-body-2\"  (click)=\"cancel()\">CANCEL</span></div>\n        </div>\n    \n    \n    </form>\n    </mat-card>\n    </div>\n    ","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogRef,\n} from \"@angular/material/dialog\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { HttpServiceMdr } from \"src/app/services/main.service\";\nimport { HttpService } from \"src/app/services/main_local.service\";\n\n@Component({\n  selector: \"app-add-user\",\n  templateUrl: \"./add-user.component.html\",\n  styleUrls: [\"./add-user.component.scss\"],\n})\nexport class AddUserComponent implements OnInit {\n  organizationsList: any = [];\n  rolesList = [\n    {\n      id: \"224608005\",\n      value: \"Front office staff\",\n    },\n    {\n      id: \"224529009\",\n      value: \"Device Issuer\",\n    },\n    {\n      id: \"doctor\",\n      value: \"Healthcare provider\",\n    },\n    {\n      id: \"6868009\",\n      value: \"Admin\",\n    },\n    {\n      id: \"ict\",\n      value: \"Analyst\",\n    },\n  ];\n  addPatientFormGroup!: FormGroup;\n  authToken: any = null;\n  mdrToken: any = null;\n  type: any;\n  userId = null;\n  userDetail: any;\n  userStatusText = \"User account is active\";\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: any,\n    private dialogRef: MatDialogRef<AddUserComponent>,\n    private dialog: MatDialog,\n    private _formBuilder: FormBuilder,\n    private httpFacadeService: HttpService,\n    private httpFhirService: HttpServiceMdr,\n    private snackBar: MatSnackBar,\n    private route: ActivatedRoute,\n    private spinner: NgxSpinnerService,\n    private router: Router\n  ) {\n    this.authToken = localStorage.getItem(\"mdr-token-auth\");\n    this.mdrToken = localStorage.getItem(\"mdr-token\");\n    this.type = data.type;\n  }\n\n  ngOnInit(): void {\n    this.addPatientFormGroup = this._formBuilder.group({\n      firstName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(50),\n          Validators.pattern(/^[a-zA-Z]+$/)\n        ],\n      ],\n      lastName: [\"\", [Validators.maxLength(50), Validators.pattern(/^[a-zA-Z]+$/)]],\n      mobileNumber: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(10),\n          Validators.pattern(/^-?(0|[1-9]\\d*)?$/)\n        ],\n      ],\n      roleId: [\"\", [Validators.required]],\n      orgId: [\"\", [Validators.required]],\n      isActive: [true, [Validators.required]],\n    });\n\n    this.getOrganizationsList();\n  }\n  \n\n  toggleChanged(event: any) {\n    console.log(event);\n    if (event.checked) this.userStatusText = \"User account is active\";\n    else this.userStatusText = \"User account is inactive\";\n  }\n  getOrganizationsList() {\n    this.httpFhirService\n      .getRequestCall(\n        \"Organization?_count=50&_elements=_id,name&_sort=name\",\n        this.mdrToken,\n        {}\n      )\n      .subscribe({\n        next: (response) =>  {\n          for (let org of response.entry) {\n            let orgData = {\n              id: org.resource.id,\n              name: org.resource.name,\n            };\n            this.organizationsList.push(orgData);\n          }\n  \n          if (this.data.type == \"edit\") {\n            this.getUserDetail();\n          }\n        },\n        error: (err) => {\n          if(err.status == 401 || err.status == 403)\n            this.dialogRef.close();\n          this.errorStatus(err);\n        }\n      }\n);\n  }\n\n  getUserDetail() {\n    this.httpFhirService\n      .getRequestCall(\n        `Practitioner?_revinclude=PractitionerRole:practitioner&_id=${this.data.id}&_count=1&_sort=-_lastUpdated`,\n        this.mdrToken,\n        {}\n      )\n      .subscribe((userData) => {\n        this.userDetail = userData;\n        let orgId = this.organizationsList.find(\n          (e: any) =>\n            userData.entry[1].resource.organization.reference.split(\"/\")[1] ==\n            +e.id\n        );\n        console.log(\n          \"check org id: \",\n          orgId,\n          userData.entry[1].resource.organization.reference.split(\"/\")[1],\n          this.organizationsList\n        );\n        this.addPatientFormGroup.controls[\"firstName\"].setValue(\n          userData.entry[0].resource.name[0].given[0]\n        );\n        this.addPatientFormGroup.controls[\"lastName\"].setValue(\n          userData.entry[0].resource.name[0].family\n        );\n        this.addPatientFormGroup.controls[\"mobileNumber\"].setValue(\n          userData.entry[0].resource.telecom[0].value.split(\" \")[1]\n        );\n        this.addPatientFormGroup.controls[\"roleId\"].setValue(\n          userData.entry[1].resource.code[0].coding[0].code\n        );\n        this.addPatientFormGroup.controls[\"orgId\"].setValue(orgId.id);\n        this.addPatientFormGroup.controls[\"isActive\"].setValue(\n          userData.entry[0].resource.active\n        );\n        this.userId = userData.entry[0].resource.id;\n      });\n  }\n\n  updateData() {\n    this.spinner.show();\n    let userData = {\n      resourceType: \"Bundle\",\n      type: \"transaction\",\n      entry: [\n        {\n          fullUrl: \"Practitioner/\" + this.userId,\n          resource: {\n            resourceType: \"Practitioner\",\n            id: this.userId,\n            active: this.addPatientFormGroup.controls[\"isActive\"].value,\n            name: [\n              {\n                family: this.addPatientFormGroup.controls[\"lastName\"].value,\n                given: [this.addPatientFormGroup.controls[\"firstName\"].value],\n              },\n            ],\n            telecom: [\n              {\n                system: \"phone\",\n                value:\n                  \"(+678) \" +\n                  this.addPatientFormGroup.controls[\"mobileNumber\"].value,\n              },\n            ],\n          },\n          request: {\n            method: \"PUT\",\n            url: \"Practitioner/\" + this.userDetail.entry[0].resource.id,\n          },\n        },\n        {\n          fullUrl: \"PractitionerRole/\" + this.userDetail.entry[1].resource.id,\n          resource: {\n            resourceType: \"PractitionerRole\",\n            id: this.userDetail.entry[1].resource.id,\n            practitioner: {\n              reference: \"Practitioner/\" + this.userDetail.entry[0].resource.id,\n            },\n            organization: {\n              reference:\n                \"Organization/\" +\n                this.addPatientFormGroup.controls[\"orgId\"].value,\n            },\n            code: [\n              {\n                coding: [\n                  {\n                    system:\n                      \"http://terminology.hl7.org/CodeSystem/practitioner-role\",\n                    code: this.addPatientFormGroup.controls[\"roleId\"].value,\n                  },\n                ],\n              },\n            ],\n          },\n          request: {\n            method: \"PUT\",\n            url: \"PractitionerRole/\" + this.userDetail.entry[1].resource.id,\n          },\n        },\n      ],\n    };\n\n    let contactNumber = \"(+678) \" + this.addPatientFormGroup.controls[\"mobileNumber\"].value;\n    this.httpFhirService.getRequestCall(`Practitioner?_count=400&_total=accurate`, this.mdrToken, {} )\n    .subscribe({\n      next: (value: any) => {\n        console.info(value)\n\n        let userList =  value.entry.filter((e: any) => e.resource.id != this.userId && e.resource.telecom[0].value == contactNumber)\n        if(userList.length == 0) {\n        this.httpFhirService\n        .postRequestCall(``, userData, this.mdrToken, {})\n        .subscribe({\n          next: (value) => {\n            this.spinner.hide();\n            this.snackBar.open(\"User updated\", \"\", {\n              horizontalPosition: \"center\",\n              verticalPosition: \"bottom\",\n              duration: 3 * 1000,\n            });\n            this.dialogRef.close({ data: \"confirmed\" });\n          },\n          error: (err) => {\n            if(err.status == 401 || err.status == 403)\n              this.dialogRef.close();\n            this.errorStatus(err);\n          },\n        });\n        }\n        else {\n          let err = {\n            error: {\n              message: \"Duplicate mobile number\"\n            }\n          }\n          this.errorStatus(err);\n        }\n      }\n    })\n \n  }\n\n  onSave() {\n    this.spinner.show();\n    if (this.data.type == \"add\") {\n      let userData = {\n        firstName: this.addPatientFormGroup.controls[\"firstName\"].value,\n        lastName: this.addPatientFormGroup.controls[\"lastName\"].value,\n        mobileNumber:\n          \"(+678) \" + this.addPatientFormGroup.controls[\"mobileNumber\"].value,\n        role: [\n          {\n            roleId: this.addPatientFormGroup.controls[\"roleId\"].value,\n            orgId: this.addPatientFormGroup.controls[\"orgId\"].value,\n          },\n        ],\n        active: this.addPatientFormGroup.controls[\"isActive\"].value,\n      };\n\n      this.httpFacadeService\n        .postRequestCall(\"Practitioner\", userData, this.authToken, {})\n        .subscribe({\n          next: (value) => {\n            this.snackBar.open(\"User added\", \"\", {\n              horizontalPosition: \"center\",\n              verticalPosition: \"bottom\",\n              duration: 3 * 1000,\n            });\n            this.dialogRef.close({ data: \"confirmed\" });\n            this.spinner.hide();\n          },\n          error: (err) => {\n            if(err.status == 401 || err.status == 403)\n            this.dialogRef.close();\n            this.errorStatus(err);\n          },\n        });\n    } else {\n      this.updateData();\n    }\n\n  }\n\n  onCancel() {\n    this.dialogRef.close({ data: \"cancelled\" });\n  }\n\n  /**\n   * Common Methods\n   *\n   */\n\n  errorStatus(error: any) {\n    console.log(\"error is: \", error)\n    this.spinner.hide();\n    this.snackBar.open(error.error.message, \"\", {\n      horizontalPosition: \"center\",\n      verticalPosition: \"bottom\",\n      duration: 3 * 1000,\n    });\n  }\n\n  keyPressChar(event:any) {\n    let inp = String.fromCharCode(event.keyCode);\n    if (/[a-zA-Z]/.test(inp)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  capitalizeFirstLetter(controlName: any) {\n\n    let value = this.addPatientFormGroup.controls[controlName].value;\n    let updatedValue = value.charAt(0).toUpperCase() + value.slice(1);\n    this.addPatientFormGroup.controls[controlName].setValue(updatedValue)\n  }\n\n  keyPressNumber(event:any) {\n    let test = String.fromCharCode(event.keyCode);\n    if (/\\d/.test(test)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n}\n\n","<div class=\"dialog\">\n  <div class=\"mat-display-3\" style=\"font-weight: 500;\">\n    {{type == 'add' ? \"Add User\" : \"Edit User\"}}\n  </div>\n  <mat-dialog-content class=\"content\">\n\n    <!-- user details -->\n    <form [formGroup]=\"addPatientFormGroup\">\n      <div class=\"section\">\n        <div class=\"sub-section\" style=\"padding-bottom: 10px;\">\n          <span class=\"mat-subheading-2 section-label\">User details</span>\n        </div>\n        <div class=\"sub-section\">\n          <mat-form-field appearance=\"outline\" class=\"form-fields\" style=\"width: 48%;\">\n            <mat-label>Given name </mat-label>\n            <input matInput #firstName required formControlName=\"firstName\" [maxlength]=\"50\" appTrimOnBlur (keydown.space)=\"$event.preventDefault()\"(keypress)=\"keyPressChar($event)\" (input)=\"capitalizeFirstLetter('firstName')\">\n            <mat-hint align=\"end\">{{firstName.value.length}} / 50</mat-hint>\n            <mat-hint class=\"error-hint\" *ngIf=\"(addPatientFormGroup.controls['firstName'].touched && addPatientFormGroup.controls['firstName'].hasError('required'))\" >\n              Please enter at least 3 characters\n             </mat-hint>\n             <mat-hint class=\"error-hint\"  *ngIf=\"((addPatientFormGroup.controls['firstName'].hasError('pattern') || addPatientFormGroup.controls['firstName'].hasError('minlength')))\">Please enter at least 3 characters\n             </mat-hint>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"form-fields\" style=\"width: 48%;\">\n            <mat-label>Family name </mat-label>\n            <input matInput formControlName=\"lastName\" #lastName [maxlength]=\"50\" appTrimOnBlur (keydown.space)=\"$event.preventDefault()\"(keypress)=\"keyPressChar($event)\" (input)=\"capitalizeFirstLetter('lastName')\">\n            <mat-hint align=\"end\">{{lastName.value.length}} / 50</mat-hint>\n            <mat-hint class=\"error-hint\"  *ngIf=\"(addPatientFormGroup.controls['lastName'].hasError('pattern'))\">Please enter only alphabets\n            </mat-hint>\n          </mat-form-field>\n        </div>\n\n        <div class=\"sub-section\">\n          <mat-form-field appearance=\"outline\" #outlineFieldRef class=\"form-fields mobile-input\" style=\"width: 48%;\" >\n            <mat-label>Mobile Number </mat-label>\n            <span matPrefix >+678 &nbsp;</span>\n            <input matInput required formControlName=\"mobileNumber\" #mobileNumber [maxlength]=\"10\" appTrimOnBlur\n            (focus)=\"outlineFieldRef.updateOutlineGap()\" (keydown.space)=\"$event.preventDefault()\" (keypress)=\"keyPressNumber($event)\">\n            <mat-hint align=\"end\">{{mobileNumber.value.length}} / 10</mat-hint>\n            <mat-hint class=\"error-hint\" *ngIf=\"(addPatientFormGroup.controls['mobileNumber'].touched && addPatientFormGroup.controls['mobileNumber'].hasError('required'))\" >\n              Enter a valid mobile number\n             </mat-hint>\n             <mat-hint class=\"error-hint\"  *ngIf=\"((addPatientFormGroup.controls['mobileNumber'].hasError('pattern') ||addPatientFormGroup.controls['mobileNumber'].hasError('minlength')))\">Enter a valid mobile number\n            </mat-hint>\n             \n          </mat-form-field>\n        </div>\n      </div>\n\n      <!-- Organization details -->\n      <div class=\"section\">\n        <div class=\"sub-section\" style=\"padding-bottom: 10px;\">\n          <span class=\"mat-subheading-2 section-label\">Organization details</span>\n        </div>\n        <div class=\"sub-section\">\n          <mat-form-field appearance=\"outline\" class=\"form-fields\">\n            <mat-label>Organization</mat-label>\n            <mat-select name=\"organization\" required formControlName=\"orgId\">\n              <mat-option *ngFor=\"let org of organizationsList\" [value]=\"org.id\">{{org.name}}</mat-option>\n            </mat-select>\n            <mat-hint class=\"error-hint\" *ngIf=\"(addPatientFormGroup.controls['orgId'].touched && addPatientFormGroup.controls['orgId'].hasError('required'))\" >\n              Please select an organization\n             </mat-hint>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"form-fields\">\n            <mat-label>Role</mat-label>\n            <mat-select name=\"role\" required formControlName=\"roleId\">\n              <mat-option *ngFor=\"let role of rolesList\" [value]=\"role.id\">{{role.value}}</mat-option>\n            </mat-select>\n            <mat-hint class=\"error-hint\" *ngIf=\"(addPatientFormGroup.controls['roleId'].touched && addPatientFormGroup.controls['roleId'].hasError('required'))\" >\n              Please select a role\n             </mat-hint>\n          </mat-form-field>\n        </div>\n      </div>\n\n      <div class=\"section\" *ngIf=\"type == 'add'\">\n        <div class=\"sub-section\" style=\"padding-bottom: 10px;\">\n          <span class=\"mat-subheading-2 section-label\">Account configuration</span>\n        </div>\n        <div class=\"sub-section\">\n          <mat-slide-toggle formControlName=\"isActive\" color=\"primary\" (change)=\"toggleChanged($event)\" style=\"padding: 10px 0 10px 0\">\n             <span>{{this.userStatusText}}</span>\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </form>\n\n\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\">\n    <button mat-button color=\"primary\" (click)=\"onCancel()\" mat-dialog-close>CANCEL</button>\n    <button mat-button color=\"primary\" (click)=\"onSave()\" [disabled]=\"addPatientFormGroup.invalid\">SAVE</button>\n  </mat-dialog-actions>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-cancelPatients',\n  templateUrl: './cancelPatients.component.html',\n  styleUrls: ['./cancelPatients.component.scss']\n})\nexport class CancelPatientsComponent implements OnInit {\n\n  constructor( \n    @Inject(MAT_DIALOG_DATA) \n    public data: any, \n    private dialogRef: MatDialogRef<CancelPatientsComponent>,\n    private dialog : MatDialog, \n    ) { \n    \n  }\n  ngOnInit(): void {\n  console.log(\"OnInit\");\n\n  }\n\n\n  onConfirm(){\n    this.dialogRef.close({ data: 'confirmed' }) \n  }\n\n  onCancel(){\n    this.dialogRef.close({ data: 'cancelled' })\n  }\n\n}\n","<div>\n    <div class=\"mat-subheading-1\">\n        Discard changes?\n    </div>\n    <mat-dialog-content class=\"mat-body-2 content\" >\n        Are you sure you want to discard this patient record?\n  </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button color=\"primary\" (click)=\"onCancel()\" mat-dialog-close>NO, GO BACK</button>\n        <button mat-button color=\"primary\"   (click)=\"onConfirm()\">YES, DISCARD</button>\n     </mat-dialog-actions>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { passwordMatchValidator, PasswordValidator } from 'src/app/shared/custom-validators';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpService } from '../../services/main_local.service';\n\n@Component({\n  selector: 'app-changePassword',\n  templateUrl: './changePassword.component.html',\n  styleUrls: ['./changePassword.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n changePasswordForm!: FormGroup;\n hide = true;\n confirmhide = true;\n current_hide = true;\n currentPassword:any;\n newPassword:any;\n confirmPassword:any;\n authToken: any = null; \n  constructor( \n    @Inject(MAT_DIALOG_DATA) \n    public data: any, \n    private fb: FormBuilder,\n    private spinner: NgxSpinnerService,\n    private httpService : HttpService,\n    private snackBar:MatSnackBar,\n    private dialogRef: MatDialogRef<ChangePasswordComponent>,\n    private dialog : MatDialog, \n    ) { \n    \n  }\n  ngOnInit(): void {\n    this.authToken = localStorage.getItem(\"mdr-token-auth\");\n    this.changePasswordForm = this.fb.group(\n        {\n        currentPassword: ['', [Validators.required, PasswordValidator]],\n        newPassword: ['', [Validators.required, PasswordValidator]],\n        confirmPassword: ['', [Validators.required, PasswordValidator, passwordMatchValidator('newPassword')]],\n       },\n      );\n   \n  }\n\n  keyPressPassword(event:any){\n    let inp = String.fromCharCode(event.keyCode);\n  \n    if (/[><,:;^'\"]/.test(inp)) {\n      event.preventDefault();\n      return false;\n    } else {\n      \n      return true;\n    }\n  } \n\n\n  onConfirm(){\n    this.spinner.show();\n    const body: any = {\n      \"oldPassword\": this.changePasswordForm.get('currentPassword')?.value,\n      \"newPassword\": this.changePasswordForm.get('newPassword')?.value\n    }\n    this.httpService.postRequestCall('auth/changePassword', body, this.authToken, {}).subscribe({\n      next: (value)=>{\n        let val:any = value;\n        this.spinner.hide();\n        this.snackBar.open((val?.message), '', {\n         horizontalPosition: 'center',\n         verticalPosition: 'bottom',\n         duration: 3 * 1000,\n      });\n      this.dialogRef.close({ data: 'confirmed' }) \n      },\n      error:(err)=>{\n        this.errorStatusFun(err);\n      }\n    })\n  }\n\n  onCancel(){\n    this.dialogRef.close({ data: 'cancelled' })\n  }\n\n  errorStatusFun(error:any){\n    this.spinner.hide();\n    this.snackBar.open((error.error.message), '', {\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      duration: 3 * 1000,\n    });\n  }\n\n}\n","<div>\n    <div class=\"mat-subheading-1\" style=\"padding-left: 12px;\">\n        Change password\n    </div>\n    <mat-dialog-content style=\"height: 340px;\">\n        <form id=\"formContainer\"  [formGroup]=\"changePasswordForm\" >\n          <mat-form-field appearance=\"outline\" style=\"padding-left: 12px;padding-top: 20px; width: 90%;\">\n            <mat-label>Current Password</mat-label>\n            <input matInput [(ngModel)]=\"currentPassword\" (focus)=\"this.changePasswordForm.controls['currentPassword'].markAsTouched();\" (keydown.space)=\"$event.preventDefault()\"  maxlength=\"15\" #currentPasswordInput\n            [type]=\"current_hide ? 'password' : 'text'\" formControlName=\"currentPassword\" (keypress)=\"keyPressPassword($event)\" required>\n            <div  style=\"cursor:pointer\" mat-icon-button matSuffix (click)=\"current_hide = !current_hide\" [attr.aria-label]=\"'Hide password'\"  *ngIf=\"!(changePasswordForm.controls['currentPassword'].invalid && changePasswordForm.controls['currentPassword'].touched)\">\n                <mat-icon>{{current_hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n              </div>\n              <div  style=\"cursor:pointer\" mat-icon-button matSuffix *ngIf=\"(changePasswordForm.controls['currentPassword'].invalid && changePasswordForm.controls['currentPassword'].touched)\" >\n                <mat-icon style=\"color: red;\">   \n                  <span class=\"material-icons-outlined\">\n                      error_outline\n                  </span>\n                </mat-icon>\n              </div>\n              <mat-hint class=\"error-hint\"  [ngClass]=\"{'error-hint': (changePasswordForm.controls['currentPassword'].hasError('invalidPassword') \n              && changePasswordForm.controls['currentPassword'].touched) , 'normal-hint': !(changePasswordForm.controls['currentPassword'].hasError('invalidPassword') \n              && changePasswordForm.controls['currentPassword'].touched) }\">\n              8-15 characters, with at least one number, special, uppercase, and lowercase characters\n              </mat-hint>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\" style=\"padding-left: 12px;padding-top: 20px; width: 90%;\">\n            <mat-label>New Password</mat-label>\n            <input matInput [(ngModel)]=\"newPassword\" (focus)=\"this.changePasswordForm.controls['newPassword'].markAsTouched();\" (keydown.space)=\"$event.preventDefault()\"  maxlength=\"15\" #newPasswordInput\n            [type]=\"hide ? 'password' : 'text'\" formControlName=\"newPassword\" (keypress)=\"keyPressPassword($event)\" required>\n            <div  style=\"cursor:pointer\" mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"  *ngIf=\"!(changePasswordForm.controls['newPassword'].invalid && changePasswordForm.controls['newPassword'].touched)\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n              </div>\n              <div  style=\"cursor:pointer\" mat-icon-button matSuffix *ngIf=\"(changePasswordForm.controls['newPassword'].invalid && changePasswordForm.controls['newPassword'].touched)\" >\n                <mat-icon>   \n                  <span class=\"material-icons-outlined\" style=\"color: red;\">\n                    error_outline\n                  </span>\n                </mat-icon>\n              </div>\n              <mat-hint class=\"error-hint\"  [ngClass]=\"{'error-hint': (changePasswordForm.controls['newPassword'].hasError('invalidPassword') \n              && changePasswordForm.controls['newPassword'].touched) , 'normal-hint': !(changePasswordForm.controls['newPassword'].hasError('invalidPassword') \n              && changePasswordForm.controls['newPassword'].touched) }\">\n              8-15 characters, with at least one number, special, uppercase, and lowercase characters\n              </mat-hint>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\" style=\"padding-left: 12px;padding-top: 20px; width: 90%;\">\n            <mat-label>Confirm password</mat-label>\n            <input (focus)=\"this.changePasswordForm.controls['confirmPassword'].markAsTouched();\" (keydown.space)=\"$event.preventDefault()\" matInput maxlength=\"15\" #confirmPasswordInput \n            [type]=\"confirmhide ? 'password' : 'text'\" formControlName=\"confirmPassword\" (keypress)=\"keyPressPassword($event)\" required>\n            <div  style=\"cursor:pointer\" mat-icon-button matSuffix (click)=\"confirmhide = !confirmhide\" [attr.aria-label]=\"'Hide password'\" *ngIf=\"!(changePasswordForm.controls['confirmPassword'].invalid && changePasswordForm.controls['confirmPassword'].touched)\">\n              <mat-icon>{{confirmhide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </div>\n              <div  style=\"cursor:pointer\" mat-icon-button matSuffix *ngIf=\"(changePasswordForm.controls['confirmPassword'].invalid && changePasswordForm.controls['confirmPassword'].touched)\" >\n                <mat-icon style=\"color: red;\">   \n                  <span class=\"material-icons-outlined\">\n                    error_outline\n                  </span>\n                </mat-icon>\n              </div>\n              <mat-hint class=\"error-hint\" \n              *ngIf=\"changePasswordForm.controls['confirmPassword'].hasError('mismatch') && !(changePasswordForm.controls['confirmPassword'].hasError('invalidPassword') )\">Password do not match\n              </mat-hint>\n          </mat-form-field>\n        </form>\n  </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button color=\"primary\" (click)=\"onCancel()\" mat-dialog-close>CANCEL</button>\n        <button mat-button color=\"primary\"   (click)=\"onConfirm()\" [disabled]=\"(changePasswordForm.invalid)\">SAVE</button>\n     </mat-dialog-actions>\n</div>\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-deactive-user',\n  templateUrl: './deactive-user.component.html',\n  styleUrls: ['./deactive-user.component.scss']\n})\nexport class DeactiveUserComponent implements OnInit {\n\n  constructor( \n    @Inject(MAT_DIALOG_DATA) \n    public data: any, \n    private dialogRef: MatDialogRef<DeactiveUserComponent>,\n    private dialog : MatDialog, \n    ) { \n    \n  }\n  ngOnInit(): void {\n  console.log(\"OnInit\");\n\n  }\n\n\n  onConfirm(){\n    this.dialogRef.close({ data: 'confirmed' }) \n  }\n\n  onCancel(){\n    this.dialogRef.close({ data: 'cancelled' })\n  }\n\n}\n","<div class=\"deactivate-dialog\">\n    <div class=\"mat-subheading-1\">\n        Change status?\n    </div>\n    <mat-dialog-content class=\"mat-body-2 content\" >\n        Are you sure you want to deactivate user account?\n  </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button color=\"primary\" (click)=\"onCancel()\" mat-dialog-close>NO, GO BACK</button>\n        <button mat-button color=\"primary\"   (click)=\"onConfirm()\">YES, CHANGE</button>\n     </mat-dialog-actions>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-issue-device',\n  templateUrl: './issue-device.component.html',\n  styleUrls: ['./issue-device.component.scss']\n})\nexport class IssueDeviceComponent implements OnInit {\n  note:any;\n  role:any;\n  constructor( @Inject(MAT_DIALOG_DATA) \n  public data: any, \n  private dialogRef: MatDialogRef<IssueDeviceComponent>,\n  private dialog : MatDialog, ) { }\n\n  ngOnInit(): void {\n    this.role = localStorage.getItem(\"display-role\");\n  }\n\n  onConfirm(){\n    this.dialogRef.close({ data: 'confirmed',note:this.note }) \n  }\n\n  onCancel(){\n    this.dialogRef.close({ data: 'cancelled',note:this.note })\n  } \n\n}\n","<div class=\"device-dialog\">\n    <div class=\"mat-h1\">\n       Issue device\n    </div>\n    <mat-dialog-content class=\"content\" >\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n            <mat-label>Enter your notes here (optional)</mat-label>\n            <input matInput #input placeholder=\"\" [(ngModel)] =\"note\" maxlength=\"200\">\n            <mat-hint align=\"end\">{{input.value.length}}/200</mat-hint>\n          </mat-form-field>\n  </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button color=\"primary\" (click)=\"onCancel()\" mat-dialog-close>CANCEL</button>\n        <button mat-button color=\"primary\"   (click)=\"onConfirm()\" *ngIf=\"role == 'Admin' || role == 'Front office staff' ||  role == 'Healthcare provider' ||  role == 'Device Issuer'\">SAVE</button>\n     </mat-dialog-actions>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-logoutConfirm',\n  templateUrl: './logoutConfirm.component.html',\n  styleUrls: ['./logoutConfirm.component.scss']\n})\nexport class LogoutConfirmComponent implements OnInit {\n\n  constructor( \n    @Inject(MAT_DIALOG_DATA) \n    public data: any, \n    private dialogRef: MatDialogRef<LogoutConfirmComponent>,\n    private dialog : MatDialog, \n    ) { \n    \n  }\n  ngOnInit(): void {\n  console.log(\"OnInit\");\n\n  }\n\n\n  onConfirm(){\n    this.dialogRef.close({ data: 'confirmed' }) \n  }\n\n  onCancel(){\n    this.dialogRef.close({ data: 'cancelled' })\n  }\n\n}\n","<div>\n    <div class=\"mat-subheading-1\">\n        Confirm logout\n    </div>\n    <mat-dialog-content class=\"mat-body-2 content\" >\n        Are you sure you want to logout?\n  </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button color=\"primary\" (click)=\"onCancel()\" mat-dialog-close>NO, GO BACK</button>\n        <button mat-button color=\"primary\"   (click)=\"onConfirm()\">LOGOUT</button>\n     </mat-dialog-actions>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-recommend-device',\n  templateUrl: './recommend-device.component.html',\n  styleUrls: ['./recommend-device.component.scss']\n})\nexport class RecommendRemoveDeviceComponent implements OnInit {\n\n  notes:any\n  role:any;\n\n  constructor( @Inject(MAT_DIALOG_DATA) \n  public data: any, \n  private dialogRef: MatDialogRef<RecommendRemoveDeviceComponent>,\n  private dialog : MatDialog, ) {\n    this.role = localStorage.getItem(\"display-role\");\n   }\n\n  ngOnInit(): void {\n  }\n\n  removeDevice(){\n    this.dialogRef.close({ data: 'confirmed', notes: this.notes }) \n  }\n\n  onCancel(){\n    this.dialogRef.close({ data: 'cancelled' })\n  }\n\n}\n","<div class=\"device-dialog\">\n    <div class=\"mat-h1\">\n      Remove device recommendation\n    </div>\n    <mat-dialog-content class=\"content\" >\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n            <mat-label>Enter your notes here *</mat-label>\n            <input matInput #input placeholder=\"\" [(ngModel)]=\"notes\"  maxlength=\"200\">\n            <mat-hint align=\"end\">{{input.value.length}}/200</mat-hint>\n          </mat-form-field>\n  </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button color=\"primary\" (click)=\"onCancel()\" mat-dialog-close>CANCEL</button>\n        <button mat-button color=\"primary\"   (click)=\"removeDevice()\" [disabled]=\"notes == undefined || notes == '' || notes == null\" *ngIf=\"role == 'Admin' || role == 'Administrative healthcare staff' ||  role == 'Healthcare provider'\">SAVE</button>\n     </mat-dialog-actions>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-remove-device',\n  templateUrl: './remove-device.component.html',\n  styleUrls: ['./remove-device.component.scss']\n})\nexport class RemoveDeviceComponent implements OnInit {\n\n  notes:any\n  role:any;\n\n  constructor( @Inject(MAT_DIALOG_DATA) \n  public data: any, \n  private dialogRef: MatDialogRef<RemoveDeviceComponent>,\n  private dialog : MatDialog, ) {\n    this.role = localStorage.getItem(\"display-role\");\n   }\n\n  ngOnInit(): void {\n  }\n\n  removeDevice(){\n    this.dialogRef.close({ data: 'confirmed', notes: this.notes }) \n  }\n\n  onCancel(){\n    this.dialogRef.close({ data: 'cancelled' })\n  }\n\n}\n","<div class=\"device-dialog\">\n    <div class=\"mat-h1\">\n       Remove issued device\n    </div>\n    <mat-dialog-content class=\"content\" >\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n            <mat-label>Enter your notes here *</mat-label>\n            <input matInput #input placeholder=\"\" [(ngModel)]=\"notes\"  maxlength=\"200\">\n            <mat-hint align=\"end\">{{input.value.length}}/200</mat-hint>\n          </mat-form-field>\n  </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button color=\"primary\" (click)=\"onCancel()\" mat-dialog-close>CANCEL</button>\n        <button mat-button color=\"primary\"   (click)=\"removeDevice()\" [disabled]=\"notes == undefined || notes == '' || notes == null\" *ngIf=\"role == 'Admin' || role == 'Front office staff' ||  role == 'Healthcare provider'\">SAVE</button>\n     </mat-dialog-actions>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-remove-file',\n  templateUrl: './remove-file.component.html',\n  styleUrls: ['./remove-file.component.scss']\n})\nexport class RemoveFileComponent implements OnInit {\n\n  notes:any\n  role:any;\n\n  constructor( @Inject(MAT_DIALOG_DATA) \n  public data: any, \n  private dialogRef: MatDialogRef<RemoveFileComponent>,\n  private dialog : MatDialog, ) {\n    this.role = localStorage.getItem(\"display-role\");\n   }\n\n  ngOnInit(): void {\n  }\n\n  removeFile(){\n    this.dialogRef.close({ data: 'confirmed', notes: this.notes }) \n  }\n\n  onCancel(){\n    this.dialogRef.close({ data: 'cancelled' })\n  }\n\n}\n","<div class=\"device-dialog\">\n    <div class=\"mat-h1\">\n      Delete file?\n    </div>\n    <mat-dialog-actions align=\"end\">\n        <button mat-button color=\"primary\" (click)=\"onCancel()\" mat-dialog-close>NO, GO BACK</button>\n        <button mat-button color=\"primary\"   (click)=\"removeFile()\">YES, DELETE</button>\n     </mat-dialog-actions>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpServiceMdr } from 'src/app/services/main.service';\n\n@Component({\n  selector: 'app-view-device',\n  templateUrl: './view-device.component.html',\n  styleUrls: ['./view-device.component.scss']\n})\nexport class ViewDeviceComponent implements OnInit {\n\n  revoked = false;\n  issueDate:any = [];\n  revokeDate:any;\n  text:any;\n  issuesNote:any;\n  revokeNote:any;\n  mdrToken:any = null;\n  issuerData:any;\n  issuerId:any;\n  role:any;\n\n  constructor( @Inject(MAT_DIALOG_DATA) \n  public data: any, \n  private snackBar:MatSnackBar,\n  private httpServiceMdr : HttpServiceMdr,\n  private dialogRef: MatDialogRef<ViewDeviceComponent>,) \n  {\n    console.log(this.data);\n    this.text = this.data.text;\n    this.mdrToken = localStorage.getItem(\"mdr-token\");\n    this.role = localStorage.getItem(\"display-role\");\n   }\n\n  ngOnInit(): void {\n    for(const element of this.data.item){\n      if(element.linkId == 'revoke-details') {\n        this.revoked = true;\n        for(let data of element.answer){\n          if(data.valueString) {\n            this.revokeNote = data.valueString; \n          }\n          if(data.valueDateTime) {\n            this.revokeDate = data.valueDateTime;\n          }\n        }\n      }\n      if(element.linkId == 'issue-details') {\n        for(let data of element.answer){\n          if(data.valueString) {\n            this.issuesNote = data.valueString; \n          }\n          if(data.valueDateTime) {\n            this.issueDate = data.valueDateTime;\n          }\n          if(data.valueReference) {\n            this.issuerId = this.getIssuerId(data.valueReference.reference);\n            this.getIssuerDetails()\n          }\n        }\n      }\n    }\n  }\n\n  removeDevice(){\n    this.dialogRef.close({ data: 'confirmed' })\n }\n\n getIssuerId(str:any) {\n  return str.split('/')[1];\n}\n\n getIssuerDetails(){\n  this.httpServiceMdr.getRequestCall(`Practitioner/`+this.issuerId ,this.mdrToken,{}).subscribe(\n    {\n     next: (value:any) => { \n     this.issuerData = value.name[0];\n\n     },\n     error: (err) => {\n      this.errorStatus(err);\n     }, \n });\n}\n\n\n  close(){\n    this.dialogRef.close({ data: 'cancelled' })\n  }\n\n  errorStatus(error:any){\n    this.snackBar.open((error.error.message[0]), '', {\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      duration: 3 * 1000,\n    });\n  }\n\n}\n\n","<div class=\"device-dialog\">\n    <div class=\"mat-h1\">\n      {{text | devicePipeGlobal}}\n    </div>\n    <mat-dialog-content class=\"content\" >\n        <div class=\"device-data\">\n            <div class=\"mat-caption label\">Issue date</div>\n            <div>{{ issueDate | date:\"dd MMM, yyyy\"}}</div>\n        </div>\n\n        <div class=\"device-data\" *ngIf=\"revoked\">\n            <div class=\"mat-caption label\">Revoked on</div>\n            <div>{{revokeDate  | date:\"dd MMM, yyyy\"}}</div>\n            <div>{{revokeNote}}</div>\n        </div>\n\n        <div class=\"device-data\" *ngIf=\"this.issuerData\">\n            <div class=\"mat-caption label\">Issuer name</div>\n            <div>{{this.issuerData.given.join(' ')}} {{this.issuerData.family ? this.issuerData.family : ''}}</div>\n        </div>\n\n        <div class=\"device-data\">\n            <div class=\"mat-caption label\">Notes</div>\n            <div>{{this.issuesNote}}</div>\n        </div>\n  </mat-dialog-content> \n    <mat-dialog-actions align=\"end\">\n        <button mat-button color=\"primary\" (click)=\"removeDevice()\" mat-dialog-close *ngIf=\"!revoked && (role == 'Admin' || role == 'Front office staff' ||  role == 'Healthcare provider')\">REMOVE DEVICE</button>\n        <button mat-button color=\"primary\"   (click)=\"close()\">CLOSE</button>\n     </mat-dialog-actions>\n</div>","import { Directive, HostListener, Optional } from '@angular/core';\nimport { FormControlDirective, FormControlName } from '@angular/forms';\n\n@Directive({\n  selector: 'textarea[appTrimOnBlur], input[appTrimOnBlur]',\n})\n\nexport class TrimOnBlurDirective {\n\n  constructor(\n    @Optional() private formControlDir: FormControlDirective,\n    @Optional() private formControlName: FormControlName\n  ) { }\n\n  @HostListener('blur')\n  onBlur(): void {\n    const control = this.formControlDir?.control || this.formControlName?.control;\n    if (!control) {\n      return;\n    }\n\n    const value = control.value;\n    if (value == null) {\n      return;\n    }\n\n    const trimmed = value.trim();\n    control.patchValue(trimmed);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TrimOnBlurDirective } from './trim-on-blur.directive';\n\n\n\n@NgModule({\n  declarations: [\n    TrimOnBlurDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TrimOnBlurDirective\n  ]\n})\nexport class TrimOnBlurModule { }\n","import { environment } from '../../environments/environment';\nimport { HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class HttpServiceMdr {\n\n    constructor(private http: HttpClient, private router: Router,) {\n \n    }\n    baseUrl = environment.baseUrl;\n    datesFromSummeryPage:any = {}\n    \n    postRequestCall(path: any, body:any, token:any, params: any){\n        if(token != null){\n          params.headers = new HttpHeaders({\"Authorization\": `Bearer ${token}`})\n        }\n        return this.http.post(this.baseUrl + path, body,  params).pipe(\n          catchError((error: HttpErrorResponse) => {\n            if(error.status === 401)\n            {\n              localStorage.clear();\n              this.router.navigate(['/login'])\n            }\n            console.error('An error occurred:', error.error)\n            return throwError(error)\n          })\n        )\n        \n      }\n\n      putRequestCall(path: any, body:any,token:any, params: any){\n        if(token != null){\n            params.headers = new HttpHeaders({\"Authorization\": `Bearer ${token}`})\n         }\n        return this.http.put(this.baseUrl + path, body,  params).pipe(\n          catchError((error: HttpErrorResponse) => {\n            if(error.status === 401)\n            {\n              localStorage.clear();\n              this.router.navigate(['/login'])\n            }\n            console.error('An error occurred:', error.error)\n            return throwError(error)\n          })\n        )\n      }\n\n      patchRequestCall(path: any, body:any,token:any, params: any){\n        if(token != null){\n            params.headers = new HttpHeaders({\n                \"Authorization\": `Bearer ${token}`, \n                \"Content-Type\": \"application/json-patch+json\"\n              })\n         }\n        return this.http.patch(this.baseUrl + path, body,  params).pipe(\n          catchError((error: HttpErrorResponse) => {\n            if(error.status === 401)\n            {\n              localStorage.clear();\n              this.router.navigate(['/login'])\n            }\n            console.error('An error occurred:', error.error)\n            return throwError(error)\n          })\n        )\n      }\n\n      getRequestCall(path: any,token:any, params: any): Observable<any>{\n      if(token != null){\n      params.headers = new HttpHeaders({\n        \"Authorization\": `Bearer ${token}`,\n        \"Cache-Control\": \"no-cache\"\n      })\n      }\n      return this.http.get(this.baseUrl + path, params).pipe(\n        catchError((error: HttpErrorResponse) => {\n          if(error.status === 401)\n          {\n            localStorage.clear();\n            this.router.navigate(['/login'])\n          }\n          console.error('An error occurred:', error.error)\n          return throwError(error)\n        })\n      )\n    }\n\n    getRequestCallByUrl(path: any,token:any, params: any): Observable<any>{\n      if(token != null){\n      params.headers = new HttpHeaders({\n        \"Authorization\": `Bearer ${token}`,\n        \"Cache-Control\": \"no-cache\"\n      })\n      }\n      return this.http.get(path, params).pipe(\n        catchError((error: HttpErrorResponse) => {\n          if(error.status === 401)\n          {\n            localStorage.clear();\n            this.router.navigate(['/login'])\n          }\n          console.error('An error occurred:', error.error)\n          return throwError(error)\n        })\n      )\n    }\n\n    deleteRequestCall(path: any,body:any,token:any, params: any):  Observable<any>{\n      if(token != null){\n      params.headers = new HttpHeaders({\"Authorization\": `Bearer ${token}`})\n      }\n      return this.http.delete(this.baseUrl + path, params).pipe(\n        catchError((error: HttpErrorResponse) => {\n          if(error.status === 401)\n          {\n            localStorage.clear();\n            this.router.navigate(['/login'])\n          }\n          console.error('An error occurred:', error.error)\n          return throwError(error)\n        })\n      )\n    }\n\n  }","import { environment } from '../../environments/environment';\nimport { HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class HttpService {\n\n    constructor(private http: HttpClient, private router: Router,) {\n \n    }\n    baseUrl = environment.baseUrl_local;\n    datesFromSummeryPage:any = {}\n    \n    postRequestCall(path: any, body:any, token:any, params: any){\n        if(token != null){\n          params.headers = new HttpHeaders({\"Authorization\": `Bearer ${token}`})\n        }\n        return this.http.post(this.baseUrl + path, body,  params).pipe(\n          catchError((error: HttpErrorResponse) => {\n            if(error.status === 401)\n            {\n              localStorage.clear();\n              this.router.navigate(['/login'])\n            }\n            console.error('An error occurred:', error.error)\n            return throwError(error)\n          })\n        )\n        \n      }\n\n      putRequestCall(path: any, body:any,token:any, params: any){\n        if(token != null){\n            params.headers = new HttpHeaders({\"Authorization\": `Bearer ${token}`})\n         }\n        return this.http.put(this.baseUrl + path, body,  params).pipe(\n          catchError((error: HttpErrorResponse) => {\n            if(error.status === 401)\n            {\n              localStorage.clear();\n              this.router.navigate(['/login'])\n            }\n            console.error('An error occurred:', error.error)\n            return throwError(error)\n          })\n        )\n      }\n\n      patchRequestCall(path: any, body:any,token:any, params: any){\n        if(token != null){\n            params.headers = new HttpHeaders({\"Authorization\": `Bearer ${token}`})\n         }\n        return this.http.patch(this.baseUrl + path, body,  params).pipe(\n          catchError((error: HttpErrorResponse) => {\n            if(error.status === 401)\n            {\n              localStorage.clear();\n              this.router.navigate(['/login'])\n            }\n            console.error('An error occurred:', error.error)\n            return throwError(error)\n          })\n        )\n      }\n\n      getRequestCall(path: any,token:any, params: any): Observable<any>{\n      if(token != null){\n      params.headers = new HttpHeaders({\n        \"Authorization\": `Bearer ${token}`,\n        \"Cache-Control\": \"no-cache\"\n      })\n      }\n      return this.http.get(this.baseUrl + path, params).pipe(\n        catchError((error: HttpErrorResponse) => {\n          if(error.status === 401)\n          {\n            localStorage.clear();\n            this.router.navigate(['/login'])\n          }\n          console.error('An error occurred:', error.error)\n          return throwError(error)\n        })\n      )\n    }\n\n    getRequestCallByUrl(path: any,token:any, params: any): Observable<any>{\n      if(token != null){\n      params.headers = new HttpHeaders({\n        \"Authorization\": `Bearer ${token}`,\n        \"Cache-Control\": \"no-cache\"\n      })\n      }\n      return this.http.get(path, params).pipe(\n        catchError((error: HttpErrorResponse) => {\n          if(error.status === 401)\n          {\n            localStorage.clear();\n            this.router.navigate(['/login'])\n          }\n          console.error('An error occurred:', error.error)\n          return throwError(error)\n        })\n      )\n    }\n\n    deleteRequestCall(path: any,body:any,token:any, params: any):  Observable<any>{\n      if(token != null){\n      params.headers = new HttpHeaders({\"Authorization\": `Bearer ${token}`})\n      }\n      return this.http.delete(this.baseUrl + path, params).pipe(\n        catchError((error: HttpErrorResponse) => {\n          if(error.status === 401)\n          {\n            localStorage.clear();\n            this.router.navigate(['/login'])\n          }\n          console.error('An error occurred:', error.error)\n          return throwError(error)\n        })\n      )\n    }\n\n  }","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth : AuthService,private router : Router){\n\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(this.auth.isLoggedin()){\n        return true;\n      }\n      this.router.navigate(['login'])\n      return false;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n  isLoggedin(){\n    return !!localStorage.getItem('mdr-token-auth')\n  }\n}\n","import { AbstractControl, ValidatorFn, FormControl, ValidationErrors} from '@angular/forms';\n\nexport function PasswordValidator(control: AbstractControl): { [key: string]: boolean } | null {\nconst passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$!%*?&(),])[A-Za-z\\d@#$!%*?&(),]{8,25}$/;  \nconst valid = passwordRegex.test(control.value);\n\n  return valid ? null : { invalidPassword: true };\n}\n\nexport function emailValidator(control: AbstractControl): { [key: string]: any } | null {\n    const emailRegex: RegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    let isValid: boolean = emailRegex.test(control.value);\n    if(control.value == ''){\n      isValid = true;\n    }\n    return isValid ? null : { invalidEmail: { value: control.value } };\n}\n\nexport function passwordMatchValidator(password: string): ValidatorFn {\n  return (control:any = FormControl) => {\n    if (!control || !control.parent) {\n      return null;\n    }\n    return control.parent.get(password).value === control.value ? null : { mismatch: true };\n  };\n}\n\nexport function AlphNumValidator(control: AbstractControl): { [key: string]: boolean } | null {\n  const alphNumRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])[a-zA-Z0-9]+$/;  \n  const valid = alphNumRegex.test(control.value);\n  \n    return valid ? null : { invalidAlphNumrid: true };\n}\n\n\nexport function noWhitespaceAtbeg(control: AbstractControl): { [key: string]: boolean } | null {\n  const noSpace = /^\\S.*[a-zA-Z\\s]*$/;  \n  const valid = noSpace.test(control.value);\n   return valid ? null : { noSpace: true };\n}\n\nexport const phoneNumbersNotEqualValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  const phoneNumber1 = control.get('phoneNumber')?.value;\n  const phoneNumber2 = control.get('secPhoneNumber')?.value;\n  if(phoneNumber1 != undefined  && phoneNumber2 != undefined ){\n  if (phoneNumber1 !== phoneNumber2) {\n    return null; // Return null if the phone numbers are not the same\n  } else {\n    return { phoneNumbersEqual: true }; // Return an error object if the phone numbers are the same\n  }\n } else {\n   return null\n }\n};\n\nexport function minLengthIfNotEmptyValidator(minLength: number): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const value = control.value;\n    if (!value || value.length === 0) {\n      return null; // If the control is empty, validation is passed\n    }\n\n    if (value.length < minLength) {\n      return { minLengthIfNotEmpty: { requiredLength: minLength, actualLength: value.length } };\n    }\n\n    return null; // Validation passed\n  };\n}\n\n\n\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'devicePipeGlobal',\n})\n\nexport class DevicePipeGlobal implements PipeTransform {\n  transform(value: any): any {\n    if (value  === 'wheelchair') {\n      return 'Wheelchair'\n    } else if(value  === 'walking-stick') {\n      return 'Walking-stick';\n    }\n    else if(value  === 'kafo') {\n        return 'Knee ankle foot orthosis (KAFO)'\n    }\n    else if(value  === 'crutches') {\n        return 'Crutches'\n    }\n    else if(value  === 'four-wheeled-walker') {\n        return 'Four-wheeled-walker'\n    }\n    else if(value  === 'walking-frame') {\n        return 'Walking-frame'\n    }\n    else if(value  === 'leg-prosthesis') {\n        return 'Leg-prosthesis'\n    }\n    else if(value  === 'foot-brace') {\n        return 'Foot-brace'\n    }\n    else if(value  === 'other') {\n        return 'Other'\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  constructor( public breakpointObserver : BreakpointObserver) {\n\n    \n   }\n\n\n   isHandset(){\n    return  this.breakpointObserver.observe(['(max-width: 600px)'])\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n   }\n}\n","import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit,AfterViewInit {\n\n  @Input() sidenavToggleState :any;\n  @ViewChild('drawer') private drawerRef: any;\n  \n\n  showSidenav = false;\n  sidenavElements=[]\n  iconsArr=[]\n\n  constructor(public router : Router) { }\n\n  ngOnInit(): void {\n\n  }\nngAfterViewInit() : void {\n  this.sidenavToggleFn()\n\n}\n  sidenavToggleFn(){\n    this.showSidenav = !this.showSidenav\n    this.drawerRef.toggle();\n  }\n\n  goToElement(event:any){\n    console.log(event);\n   \n  }\n\n\n\n}","<mat-drawer-container style=\"margin:0;padding:0\" class=\"example-container\" (backdropClick)=\"sidenavToggleFn()\"  autosize [hasBackdrop]=\"false\">\n    <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\" >\n      <div  class=\"drawer-style\">\n        <div  class=\"sidenavTitleArea\" style=\"margin: 15px;\">\n            <button  mat-icon-button \n            (click)=\"sidenavToggleFn()\"\n            class=\"example-icon\">\n              <mat-icon class=\"example-icon\">menu</mat-icon>\n            </button>\n          <h3>Vanuatu</h3>\n            \n        </div>\n        \n      </div>\n        <div *ngFor=\"let element of sidenavElements;index as i\" (click)=\"goToElement(i)\" class=\"elements-div\">\n            <mat-icon style=\"margin-right: 10px\">{{iconsArr[i]}}</mat-icon><span>   </span>{{element}}\n        </div>\n     \n    </mat-drawer>\n  \n    <div class=\"example-sidenav-content\">\n      <app-toolbar [sidenavToggleState]=\"showSidenav\" (sidenavToggleEvent)=\"sidenavToggleFn()\"></app-toolbar>\n      <div style=\"height: 100px;background-color: #B2EBF2;margin-top:-12px !important; position: sticky;z-index: 3;\">\n      </div>\n      <router-outlet></router-outlet>  \n\n    </div>\n  \n  </mat-drawer-container>\n  ","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n  @Input() sidenavToggleState : any;\n  @Output() sidenavToggleEvent = new EventEmitter<any>();\n  sidenavToggle = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleSidenav(){\n    this.sidenavToggleEvent.emit(this.sidenavToggleState);\n  }\n\n}\n","<p style=\"position:sticky;top:0;z-index:10\">\n    <mat-toolbar  class=\"toolbarClass\">\n      <button mat-icon-button *ngIf=\"!sidenavToggleState\"\n      (click)=\"toggleSidenav()\"\n      class=\"example-icon\"\n       aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <!-- <span>Beato</span> -->\n      <!-- <span class=\"example-spacer\"></span>\n      <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n        <mat-icon>favorite</mat-icon>\n      </button>\n      <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n        <mat-icon>share</mat-icon>\n      </button> -->\n    </mat-toolbar>\n  </p>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'https://mdr.gov.vu/fhir/',\n  baseUrl_local: 'https://mdr.gov.vu/facade/api/v1/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["Validators","i0","LoginComponent","constructor","fb","router","spinner","sharedService","snackBar","route","httpService","isHandset","ngOnInit","show","loginForm","group","mobileNumber","required","minLength","maxLength","mdr_token","localStorage","getItem","auth_token","role","navigate","hide","ngAfterViewInit","console","log","clear","keyPressNumber","event","test","String","fromCharCode","keyCode","preventDefault","onSubmit","body","countryCode","postRequestCall","authToken","subscribe","next","value","data","open","message","horizontalPosition","verticalPosition","duration","otpPage","relativeTo","queryParams","mob","get","error","err","errorStatus","forgotPassword","msg","selectors","decls","vars","consts","template","ctx","markAsTouched","timer","take","OtpComponent","dialog","otpLength","autofocus","classList","inputBox","input","inputFilled","inputDisabled","inputSuccess","inputError","unloadHandler","result","confirm","returnValue","params","countTimer","setErrors","transform","minutes","Math","floor","slice","counter","tick","countDown","pipe","unsubscribe","handeOtpChange","validOtp","isOtp","handleFillEvent","otp","onVerify","errorStatusFun","onResend","window","navigator","onLine","back","hostBindings","PasswordValidator","PasswordComponent","passwordForm","password","keyPressAlphaNumeric","inp","keyPressPassword","val","display_role","roles","setItem","token","sessionId","userId","username","contactNumber","$event","passwordMatchValidator","SetPasswordComponent","setPasswordForm","confirmPassword","id","flag","cancel","onSave"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
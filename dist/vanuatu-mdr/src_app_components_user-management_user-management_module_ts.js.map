{"version":3,"file":"src_app_components_user-management_user-management_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAG2D;AAEV;AACY;AAGiB;AACe;;;;;;;;;;;;;;;;;;;;;;;;ICH7E,6EACsC;IADI,oSAAS,qFAAmB,KAAC;IAEnE,+EAA6D;IAAA,qEAAU;IAAA,4DAAW;IAClF,qEACJ;IAAA,4DAAS;;;IAaD,iFAAmE;IAAA,uDAAY;IAAA,4DAAa;;;IAA1C,6EAAgB;IAAC,0DAAY;IAAZ,6EAAY;;;IAQ/E,iFAA6D;IAAA,uDAAc;IAAA,4DAAa;;;IAA7C,8EAAiB;IAAC,0DAAc;IAAd,+EAAc;;;;IAiB/E,6EAA2G;IAAtD,qSAAS,8EAAY,KAAC;IACvE,2EAAU;IAAA,gEAAK;IAAA,4DAAW;;;IAkB1B,sFAAoF;IAAC,sEACrF;IAAA,4DAAkB;;;IADiC,2FAAgC;;;IAEnF,+EACiD;IAC7C,uDACJ;;IAAA,4DAAW;;;IAHwC,wFAA2B;IAE1E,0DACJ;IADI,kPACJ;;;IAMA,kFAAoE;IAAC,yEACrE;IAAA,4DAAkB;;;IADiB,2FAAgC;;;IAEnE,+EAAmD;IAAC,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,gGAAqB;;;IAKzE,kFAAoE;IAAC,iEAAK;IAAA,4DAAkB;;;IAAzD,2FAAgC;;;IACnE,+EAAmD;IAC/C,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,wFACJ;;;IAKA,sFAAoF;IAAC,qEACrF;IAAA,4DAAkB;;;IADiC,4FAAgC;;;IAEnF,+EAAmD;IAC/C,uDACJ;IAAA,4DAAW;;;IADP,0DACJ;IADI,gGACJ;;;IAKA,sFAAoF;IAAC,mEACrF;IAAA,4DAAkB;;;IADiC,4FAAgC;;;;IAG/E,uFAC8E;IAA1E,qaAAU,kGAA4B,KAAC;IACvC,2EAAkC;IAAA,uDAAkB;IAAA,4DAAO;;;IAF7B,mFAAsB;IAElB,0DAAkB;IAAlB,mFAAkB;;;IAExD,uEAAwC;IAAA,uDAAkB;IAAA,4DAAO;;;IAAzB,0DAAkB;IAAlB,mFAAkB;;;IAL9D,+EAAmD;IAC/C,oJAGmB;IACnB,4HAAiE;IACrE,4DAAW;;;IAJsC,0DAA+B;IAA/B,mGAA+B;IAGrE,0DAA+B;IAA/B,mGAA+B;;;IAQ1C,sFAA4D;IAAA,iEAAM;IAAA,4DAAkB;;;;IACpF,2EAAgC;IACF,oXAAS,gGAA0B,KAAC;IAAC,+DAAI;IAAA,4DAAW;;;IAJtF,4EACsC;IAClC,sJAAoF;IACpF,wIAEW;IACf,qEAAe;;;IAEf,4EAAqE;;;IACrE,qEAAoE;;;IAExE,0EAA0E;IACvE,uDACD;IAAA,4DAAM;;;IADL,0DACD;IADC,8MACD;;;AD9GX,MAAM,iBAAiB;IA+C5B,YACU,MAAc,EACd,MAAiB,EACjB,QAAqB,EACrB,KAAqB,EACrB,OAA0B,EAC1B,QAA0B,EAC1B,iBAA8B,EAC9B,eAA+B;QAP/B,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAW;QACjB,aAAQ,GAAR,QAAQ,CAAa;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,sBAAiB,GAAjB,iBAAiB,CAAa;QAC9B,oBAAe,GAAf,eAAe,CAAgB;QAtDzC,cAAS,GAAQ,EAAE,CAAC;QACpB,qBAAgB,GAAa;YAC3B,UAAU;YACV,cAAc;YACd,MAAM;YACN,cAAc;YACd,QAAQ;SACT,CAAC;QACF,UAAK,GAAG,SAAS,CAAC;QAElB,cAAS,GAAQ,IAAI,CAAC;QACtB,cAAS,GAAG,EAAE,CAAC;QAEf,gBAAW,GAAQ,EAAE,CAAC;QAItB,UAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QAEnB,cAAS,GAAG;YACV;gBACE,EAAE,EAAE,WAAW;gBACf,KAAK,EAAE,oBAAoB;aAC5B;YACD;gBACE,EAAE,EAAE,WAAW;gBACf,KAAK,EAAE,eAAe;aACvB;YACD;gBACE,EAAE,EAAE,QAAQ;gBACZ,KAAK,EAAE,qBAAqB;aAC7B;YACD;gBACE,EAAE,EAAE,SAAS;gBACb,KAAK,EAAE,OAAO;aACf;YACD;gBACE,EAAE,EAAE,KAAK;gBACT,KAAK,EAAE,SAAS;aACjB;SACF,CAAC;QACF,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,gBAAW,GAAG,KAAK,CAAC;QACpB,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAQ,EAAE,CAAC;QAWrB,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,YAAY,IAAI,SAAS;YAChC,IAAI,CAAC,gBAAgB,GAAG;gBACtB,UAAU;gBACV,cAAc;gBACd,MAAM;gBACN,cAAc;gBACd,QAAQ;gBACR,MAAM;aACP,CAAC;QACJ,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe;aACjB,cAAc,CACb,4CAA4C,EAC5C,IAAI,CAAC,QAAQ,EACb,EAAE,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACjB,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE;oBAC9B,IAAI,OAAO,GAAG;wBACZ,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE;wBACnB,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI;qBACxB,CAAC;oBACF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACtC;gBACD,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe;aACjB,cAAc,CACb,uFAAuF,EACvF,IAAI,CAAC,QAAQ,EACb,EAAE,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,SAAS,EAAE,EAAE;gBAClB,KAAK,IAAI,IAAI,IAAI,SAAS,CAAC,KAAK,EAAE;oBAChC,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAC7B,CAAC,CAAM,EAAE,EAAE,CACT,CAAC,CAAC,QAAQ,CAAC,YAAY,IAAI,kBAAkB;wBAC7C,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS;4BAC/B,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CACvC,CAAC;oBACF,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;wBAC9D,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;6BACzC,KAAK,CAAC,GAAG,CAAC;6BACV,GAAG,EAAE;6BACL,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjB,IAAI,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC5C,CAAC,CAAM,EAAE,EAAE,CACT,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC7D,CAAC;wBACF,IAAI,QAAQ,GAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CACrC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CACzD,CAAC;wBACF,IAAI,IAAI,GAAG;4BACT,QAAQ,EACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gCAC9B,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;oCAC3B,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;oCACpC,CAAC,CAAC,EAAE,CAAC;4BACT,YAAY,EAAE,YAAY,CAAC,IAAI;4BAC/B,IAAI,EAAE,QAAQ,CAAC,KAAK;4BACpB,YAAY,EACV,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BAC9D,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;4BAC5B,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU;4BACxD,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;4BACpB,WAAW,EACT,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;gCACxC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;gCACtC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;gCAC1C,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;yBAC/C,CAAC;wBAEF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAC3B;iBACF;gBACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAClC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAClD,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACnC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,GAAG,CAAC;QACR,IAAG,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE;YACtB,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC9B;aAAM;YACL,GAAG,GAAG,uBAAuB;SAC9B;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE;YAC1B,kBAAkB,EAAE,QAAQ;YAC5B,gBAAgB,EAAE,QAAQ;YAC1B,QAAQ,EAAE,CAAC,GAAG,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,iBAAiB;QACf,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wFAAgB,EAAE;YACnD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,iBAAiB;YAC7B,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;YACrB,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,IAAI,GAAG,CAAC,IAAI,IAAI,WAAW,EAAE;gBAC3B,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,EAAO;QACxB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wFAAgB,EAAE;YACnD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,iBAAiB;YAC7B,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxC,IAAI,GAAG,CAAC,IAAI,IAAI,WAAW,EAAE;gBAC3B,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uGAAqB,EAAE;YAC1D,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,iBAAiB;YAC7B,IAAI,EAAE,EAAE;YACR,YAAY,EAAE,KAAK;SACpB,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,IAAS,EAAE,MAAW;QACpC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9D,IAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YACnB,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBAEtD,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,EAAE;oBAC5B,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;oBAC9B,MAAM,GAAG,KAAK,CAAC;oBACf,eAAe;oBACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;oBAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC;iBACvD;YACH,CAAC,CAAC,CAAC;SACJ;aAAM,IAAG,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC,OAAO,EAAC;YACvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC;SAC/D;IACH,CAAC;IAED,WAAW,CAAC,MAAW,EAAE,MAAe;QACtC,IAAI,YAAY,GAAG,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;QAEvE,IAAI,CAAC,eAAe;aACjB,gBAAgB,CACf,gBAAgB,MAAM,EAAE,EACxB,YAAY,EACZ,IAAI,CAAC,QAAQ,EACb,EAAE,CACH;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;gBACzC,IAAI,UAAU,GAAG,qBAAqB,CAAC;gBACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE;oBACjC,kBAAkB,EAAE,QAAQ;oBAC5B,gBAAgB,EAAE,QAAQ;oBAC1B,QAAQ,EAAE,CAAC,GAAG,IAAI;iBACnB,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QACT,IAAI,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;QACvD,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAC/C,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACjD,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAED,aAAa,CAAC,IAAS;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,oBAAoB,CAAC,YAAiB;QACpC,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK,EAAE;YAC7B,IAAI,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC/C,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,WAAW,CACrC,CAAC;YACF,YAAY,GAAG,YAAY,CAAC,MAAM,CAChC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,eAAe,CAAC,IAAI,CACnD,CAAC;SACH;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,YAAY,CAAC,YAAiB;QAC5B,IAAI,IAAI,CAAC,YAAY,IAAI,KAAK,EAAE;YAC9B,IAAI,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CACxC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CACtC,CAAC;YACF,YAAY,GAAG,YAAY,CAAC,MAAM,CAChC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,gBAAgB,EAAE,KAAK,CAC9C,CAAC;SACH;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,cAAc,CAAC,YAAiB;QAC9B,IAAI,IAAI,CAAC,cAAc,IAAI,KAAK,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;YACpE,YAAY,GAAG,YAAY,CAAC,MAAM,CAChC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,CAC5C,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,YAAY,CAAC,CAAC;SAC7D;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,cAAc,CAAC,YAAiB;QAC9B,IAAI,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE;YAC1B,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YACvD,uIAAuI;YACvI,YAAY,GAAG,YAAY,CAAC,MAAM,CAChC,CAAC,CAAM,EAAE,EAAE,CACT,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;gBAC7C,CAAC,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;gBACjD,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;gBACzC,CAAC,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;gBACjD,CAAC,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,CAClD,CAAC;SACH;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IAED,WAAW;QACT,IACE,IAAI,CAAC,WAAW,IAAI,KAAK;YACzB,IAAI,CAAC,YAAY,IAAI,KAAK;YAC1B,IAAI,CAAC,cAAc,IAAI,KAAK;YAC5B,IAAI,CAAC,WAAW,IAAI,EAAE;YAEtB,OAAO,IAAI,CAAC;;YACT,OAAO,KAAK,CAAC;IACpB,CAAC;;kFAvXU,iBAAiB;+GAAjB,iBAAiB;kEAejB,sEAAY;kEACZ,4DAAO;;;;;;QCnCpB,yEAAkB;QAK8C,iEAAM;QAAA,4DAAM;QAChE,yEAA0B;QACtB,mHAIS;QACb,4DAAM;QAGV,gEAAI;QAGJ,sFAA6D;QAGtC,wEAAY;QAAA,4DAAY;QACnC,iFAA4F;QAA5D,gMAAyB,0GAAoB,iBAAa,IAAjC;QACrD,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,8HAA4F;QAChG,4DAAa;QAGjB,qFAAyD;QAC1C,gEAAI;QAAA,4DAAY;QAC3B,kFAAqF;QAA7D,iMAA0B,0GAAoB,iBAAa,IAAjC;QAC9C,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,8HAAwF;QAC5F,4DAAa;QAGjB,qFAAyD;QAC1C,kEAAM;QAAA,4DAAY;QAC7B,kFAAyF;QAA/D,mMAA4B,0GAAoB,iBAAa,IAAjC;QAClD,kFAAwB;QAAA,+DAAG;QAAA,4DAAa;QACxC,kFAA2B;QAAA,kEAAM;QAAA,4DAAa;QAC9C,kFAA4B;QAAA,oEAAQ;QAAA,4DAAa;QAK7D,2EAAkC;QAEc,kEAAM;QAAA,4DAAW;QACzD,sHAES;QACT,iFAC4B;QADqB,2LAAyB,iFAC7D,iBAAa,IADgD;QAA1E,4DAC4B;QAGhC,2EAA2B;QACmB,0IAAS,kBAAc,IAAC;QAC9D,gFAA6D;QAAA,mEAAO;QAAA,4DAAW;QAC/E,0EAAa;QAAA,4DAAS;QAIlC,2EAAoD;QAG5C,4EACA;QAAA,6EAAsC;QAClC,wIACkB;QAClB,0HAGW;QAEf,qEAAe;QAEf,oFACA;QAAA,6EAA0C;QACtC,wIACkB;QAClB,0HAAoF;QACxF,qEAAe;QAEf,4EACA;QAAA,6EAAkC;QAC9B,wIAA4F;QAC5F,0HAEW;QACf,qEAAe;QAEf,qFACA;QAAA,6EAA0C;QACtC,wIACkB;QAClB,0HAEW;QACf,qEAAe;QAEf,8EACA;QAAA,6EAAoC;QAChC,wIACkB;QAClB,0HAMW;QAEf,qEAAe;QAEf,4EACA;QAAA,kIAMe;QAEf,sIAAqE;QACrE,wHAAoE;QACxE,4DAAY;QACZ,gHAEQ;QACR,qEAAgD;QAGpD,4DAAM;;QA7HG,0DAA+B;QAA/B,+FAA+B;QAcA,0DAAyB;QAAzB,oFAAyB;QAEzB,0DAAoB;QAApB,0FAAoB;QAM5B,0DAA0B;QAA1B,qFAA0B;QAEjB,0DAAY;QAAZ,kFAAY;QAMnB,0DAA4B;QAA5B,uFAA4B;QAEtC,0DAAc;QAAd,uEAAc;QACd,0DAAe;QAAf,wEAAe;QAQ8C,0DAA4B;QAA5B,4FAA4B;QAGxD,0DAAyB;QAAzB,oFAAyB;QAKP,0DAA0B;QAA1B,uFAA0B;QAO5E,0DAAyB;QAAzB,sFAAyB;QAqDrC,2DAA+B;QAA/B,+FAA+B;QAOnB,0DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAE9B,0DAAiC;QAAjC,iGAAiC;QAIhD,0DAAe;QAAf,wEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClIC;AACmB;AACX;AACA;AACE;AACE;AACF;AACS;AACD;AACD;AAEI;AACA;AACT;AACW;AACf;AACM;;AA8BtD,MAAM,oBAAoB;;wFAApB,oBAAoB;iHAApB,oBAAoB;qHArB7B,6EAAiB;QACjB,yDAAY;QACZ,+DAAmB;QACnB,uDAAW;QACX,iEAAa;QACb,iEAAa;QACb,mEAAc;QACd,qEAAe;QACf,mEAAc;QACd,4EAAkB;QAClB,kEAAa;QACb,6EAAkB;QAClB,4EAAkB;QAClB,2EAAiB;QACjB,+DAAmB;QACnB,sEAAe;QACf,iFAAoB;QACpB,wEAAgB;mIAIP,oBAAoB,mBAxB7B,6EAAiB,aAGjB,6EAAiB;QACjB,yDAAY;QACZ,+DAAmB;QACnB,uDAAW;QACX,iEAAa;QACb,iEAAa;QACb,mEAAc;QACd,qEAAe;QACf,mEAAc;QACd,4EAAkB;QAClB,kEAAa;QACb,6EAAkB;QAClB,4EAAkB;QAClB,2EAAiB;QACjB,+DAAmB;QACnB,sEAAe;QACf,iFAAoB;QACpB,wEAAgB;;;;;;;;;;;;;;;;;;AC1CmC;AACa;;;AAMpE,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAE,UAAU,EAAC,MAAM,EAAC,SAAS,EAAC,MAAM,EAAC;IAC7C,EAAC,IAAI,EAAE,MAAM,EAAC,SAAS,EAAE,6EAAiB,EAAC;IAC3C,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAC,kBAAkB,EAAC;CAC5C,CAAC;AAOK,MAAM,iBAAiB;;kFAAjB,iBAAiB;8GAAjB,iBAAiB;kHAJlB,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAGX,iBAAiB,oFAHlB,yDAAY","sources":["./src/app/components/user-management/user-list/user-list.component.ts","./src/app/components/user-management/user-list/user-list.component.html","./src/app/components/user-management/user-management.module.ts","./src/app/components/user-management/userManagement-routing.module.ts"],"sourcesContent":["import { LocationStrategy } from \"@angular/common\";\nimport { Component, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { AddUserComponent } from \"src/app/dialog/add-user/add-user.component\";\nimport { DeactiveUserComponent } from \"src/app/dialog/deactive-user/deactive-user.component\";\nimport { HttpServiceMdr } from \"src/app/services/main.service\";\nimport { HttpService } from \"src/app/services/main_local.service\";\n\n@Component({\n  selector: \"app-user-list\",\n  templateUrl: \"./user-list.component.html\",\n  styleUrls: [\"./user-list.component.scss\"],\n})\nexport class UserListComponent implements OnInit {\n  tableData: any = [];\n  displayedColumns: string[] = [\n    \"userName\",\n    \"organization\",\n    \"role\",\n    \"mobileNumber\",\n    \"status\"\n  ];\n  color = \"#FFFFFF\";\n  dataSource: MatTableDataSource<[]>;\n  authToken: any = null;\n  usersList = [];\n  statusDialog: any;\n  searchInput: any = \"\";\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\n  @Input() max: any;\n  today = new Date();\n  mdrToken;\n  rolesList = [\n    {\n      id: \"224608005\",\n      value: \"Front office staff\",\n    },\n    {\n      id: \"224529009\",\n      value: \"Device Issuer\",\n    },\n    {\n      id: \"doctor\",\n      value: \"Healthcare provider\",\n    },\n    {\n      id: \"6868009\",\n      value: \"Admin\",\n    },\n    {\n      id: \"ict\",\n      value: \"Analyst\",\n    },\n  ];\n  organizationsList: any = [];\n  selectedOrg = \"all\";\n  selectedRole = \"all\";\n  selectedStatus = \"all\";\n  loggedInRole: any = \"\";\n  constructor(\n    private router: Router,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private route: ActivatedRoute,\n    private spinner: NgxSpinnerService,\n    private location: LocationStrategy,\n    private httpFacadeService: HttpService,\n    private httpFhirService: HttpServiceMdr\n  ) {\n    this.authToken = localStorage.getItem(\"mdr-token-auth\");\n    this.mdrToken = localStorage.getItem(\"mdr-token\");\n    this.loggedInRole = localStorage.getItem(\"role\");\n    this.tableData = [];\n    if (this.loggedInRole == \"6868009\")\n      this.displayedColumns = [\n        \"userName\",\n        \"organization\",\n        \"role\",\n        \"mobileNumber\",\n        \"status\",\n        \"edit\"\n      ];\n    this.dataSource = new MatTableDataSource(this.tableData);\n  }\n\n  ngOnInit(): void {\n    this.getOrgList();\n  }\n\n  getOrgList() {\n    this.spinner.show();\n    this.organizationsList = [];\n    this.httpFhirService\n      .getRequestCall(\n        \"Organization?_count=200&_elements=_id,name\",\n        this.mdrToken,\n        {}\n      )\n      .subscribe({\n        next: (response) => {\n          for (let org of response.entry) {\n            let orgData = {\n              id: org.resource.id,\n              name: org.resource.name,\n            };\n            this.organizationsList.push(orgData);\n          }\n          this.getUsersList();\n          this.spinner.hide();\n        },\n        error: (err) => {\n          this.errorStatus(err);\n        }\n      });\n  }\n\n  getUsersList() {\n    this.spinner.show();\n    this.tableData = [];\n    this.httpFhirService\n      .getRequestCall(\n        \"Practitioner?_revinclude=PractitionerRole:practitioner&_count=400&_sort=-_lastUpdated\",\n        this.mdrToken,\n        {}\n      )\n      .subscribe({\n        next: (usersList) => {\n          for (let user of usersList.entry) {\n            let role = usersList.entry.find(\n              (e: any) =>\n                e.resource.resourceType == \"PractitionerRole\" &&\n                e.resource.practitioner.reference ==\n                  \"Practitioner/\" + user.resource.id\n            );\n            if (role && user.resource.id != localStorage.getItem(\"userId\")) {\n              let isdCode = user.resource.telecom[0].value\n                .split(\"(\")\n                .pop()\n                .split(\")\")[0];\n              let organization = this.organizationsList.find(\n                (e: any) =>\n                  e.id == role.resource.organization.reference.split(\"/\")[1]\n              );\n              let roleData: any = this.rolesList.find(\n                (e: any) => e.id == role.resource.code[0].coding[0].code\n              );\n              let data = {\n                userName:\n                  user.resource.name[0].given[0] +\n                  (user.resource.name[0].family\n                    ? \" \" + user.resource.name[0].family\n                    : \"\"),\n                organization: organization.name,\n                role: roleData.value,\n                mobileNumber:\n                  isdCode + \" \" + user.resource.telecom[0].value.split(\" \")[1],\n                status: user.resource.active,\n                statusText: user.resource.active ? \"Active\" : \"Inactive\",\n                id: user.resource.id,\n                lastUpdated:\n                  new Date(user.resource.meta.lastUpdated) >\n                  new Date(role.resource.meta.lastUpdated)\n                    ? new Date(user.resource.meta.lastUpdated)\n                    : new Date(role.resource.meta.lastUpdated),\n              };\n\n              this.tableData.push(data);\n            }\n          }\n          this.tableData = this.tableData.sort(\n            (a: any, b: any) => b.lastUpdated - a.lastUpdated\n          );\n          this.setDataSource(this.tableData);\n          this.spinner.hide();\n        },\n        error: (err) => {\n          this.errorStatus(err);\n        }\n      });\n  }\n\n  errorStatus(error: any) {\n    this.spinner.hide();\n    let msg;\n    if(error.error.message) {\n      msg = error.error.message[0];\n    } else {\n      msg = 'Internal server error'\n    }\n    this.snackBar.open(msg, '', {\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n      duration: 3 * 1000,\n    });\n  } \n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  openAddUserDialog() {\n    const dialogRef = this.dialog.open(AddUserComponent, {\n      width: \"718px\",\n      height: \"auto\",\n      panelClass: \"add-user-dialog\",\n      data: { type: \"add\" },\n      disableClose: true,\n    });\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res.data == \"confirmed\") {\n        setTimeout(() => {\n          this.getUsersList();\n        }, 1000);\n      }\n    });\n  }\n\n  openEditUserDialog(id: any) {\n    const dialogRef = this.dialog.open(AddUserComponent, {\n      width: \"718px\",\n      height: \"auto\",\n      panelClass: \"add-user-dialog\",\n      data: { type: \"edit\", id: id },\n      disableClose: true,\n    });\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res.data == \"confirmed\") {\n        setTimeout(() => {\n          this.getUsersList();\n          this.resetFilters();\n        }, 1000);\n      }\n    });\n  }\n\n  openStatusDialog() {\n    this.statusDialog = this.dialog.open(DeactiveUserComponent, {\n      width: \"389px\",\n      height: \"auto\",\n      panelClass: \"add-user-dialog\",\n      data: {},\n      disableClose: false,\n    });\n  }\n\n  patchUserStatus(user: any, $event: any) {\n    console.log(\"userId and status\", user.status, $event.checked);\n    let status = $event.checked;\n    if (!$event.checked) {\n      $event.source.checked = true;\n      this.openStatusDialog();\n      this.statusDialog.afterClosed().subscribe((data: any) => {\n      \n        if (data.data == \"confirmed\") {\n          $event.source.checked = false;\n          status = false;\n          // patch status\n          this.patchStatus(user.id, status);\n          user.status = status;\n          user.statusText = user.status ? \"Active\" : \"Inactive\";\n        }\n      });\n    } else if(user.status !== $event.checked){\n      user.status = status;\n      this.patchStatus(user.id, status);\n      user.statusText = user.status == true ? \"Active\" : \"Inactive\";\n    }\n  }\n\n  patchStatus(userId: any, status: boolean) {\n    let resourceData = [{ op: \"replace\", path: \"/active\", value: status }];\n\n    this.httpFhirService\n      .patchRequestCall(\n        `Practitioner/${userId}`,\n        resourceData,\n        this.mdrToken,\n        {}\n      )\n      .subscribe({\n        next: (response: any) => {\n          console.log(\"check response:\", response);\n          let statusText = \"User status updated\";\n          this.snackBar.open(statusText, \"\", {\n            horizontalPosition: \"center\",\n            verticalPosition: \"bottom\",\n            duration: 3 * 1000,\n          });\n        },\n        error: (err) => {\n          this.errorStatus(err);\n        }\n      });\n  }\n\n  clearInput() {\n    this.searchInput = \"\";\n    this.filterUsers();\n  }\n  filterUsers() {\n    let userListCopy = [...this.tableData];\n    userListCopy = this.filterByOrganization(userListCopy);\n    userListCopy = this.filterByRole(userListCopy);\n    userListCopy = this.filterByStatus(userListCopy);\n    userListCopy = this.filterBySearch(userListCopy);\n    console.log(userListCopy);\n    this.setDataSource(userListCopy);\n  }\n\n  setDataSource(list: any) {\n    this.dataSource = new MatTableDataSource(list);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  filterByOrganization(userListCopy: any) {\n    if (this.selectedOrg != \"all\") {\n      let selectedOrgName = this.organizationsList.find(\n        (e: any) => e.id == this.selectedOrg\n      );\n      userListCopy = userListCopy.filter(\n        (e: any) => e.organization == selectedOrgName.name\n      );\n    }\n    return userListCopy;\n  }\n\n  filterByRole(userListCopy: any) {\n    if (this.selectedRole != \"all\") {\n      let selectedRoleName = this.rolesList.find(\n        (e: any) => e.id == this.selectedRole\n      );\n      userListCopy = userListCopy.filter(\n        (e: any) => e.role == selectedRoleName?.value\n      );\n    }\n    return userListCopy;\n  }\n\n  filterByStatus(userListCopy: any) {\n    if (this.selectedStatus != \"all\") {\n      console.log(\"selected status: \", this.selectedStatus, userListCopy);\n      userListCopy = userListCopy.filter(\n        (e: any) => e.status == this.selectedStatus\n      );\n      console.log(\"selected status userListCopy: \", userListCopy);\n    }\n    return userListCopy;\n  }\n\n  filterBySearch(userListCopy: any) {\n    if (this.searchInput != \"\") {\n      let inputValue = this.searchInput.trim().toLowerCase();\n      // userListCopy = userListCopy.filter((e: any) => Object.entries(e).some(entry => String(entry[1]).toLowerCase().includes(inputValue)))\n      userListCopy = userListCopy.filter(\n        (e: any) =>\n          e.userName.toLowerCase().includes(inputValue) ||\n          e.organization.toLowerCase().includes(inputValue) ||\n          e.role.toLowerCase().includes(inputValue) ||\n          e.mobileNumber.toLowerCase().includes(inputValue) ||\n          e.statusText.toLowerCase().includes(inputValue)\n      );\n    }\n    return userListCopy;\n  }\n\n  resetFilters() {\n    this.selectedOrg = \"all\";\n    this.selectedRole = \"all\";\n    this.selectedStatus = \"all\";\n    this.searchInput = \"\";\n    this.setDataSource(this.tableData);\n  }\n\n  handleReset() {\n    if (\n      this.selectedOrg == \"all\" &&\n      this.selectedRole == \"all\" &&\n      this.selectedStatus == \"all\" &&\n      this.searchInput == \"\"\n    )\n      return true;\n    else return false;\n  }\n}\n","<div class=\"main\">\n\n    <mat-card class=\"landing-card\">\n        <!-- Users header -->\n        <div class=\"card-header\">\n            <div class=\"mat-headline\" style=\"margin-top: 10px;\">Users </div>\n            <div class=\"buttons-area\">\n                <button mat-raised-button color=\"primary\" (click)=\"openAddUserDialog()\"\n                    *ngIf=\"loggedInRole == '6868009'\">\n                    <mat-icon class=\"add-icon\" fontSet=\"material-icons-outlined\">person_add</mat-icon>\n                    ADD USER\n                </button>\n            </div>\n\n        </div>\n        <hr>\n\n        <!--  Users list  -->\n        <mat-card-content class=\"card-content\" style=\"height: 100%;\">\n            <div class=\"select-filter\">\n                <mat-form-field appearance=\"outline\" class=\"form-fields\">\n                    <mat-label>Organization</mat-label>\n                    <mat-select name=\"organization\" [(ngModel)]=\"selectedOrg\" (selectionChange)=\"filterUsers()\">\n                        <mat-option value=\"all\">All</mat-option>\n                        <mat-option *ngFor=\"let org of organizationsList\" [value]=\"org.id\">{{org.name}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" class=\"form-fields\">\n                    <mat-label>Role</mat-label>\n                    <mat-select name=\"role\" [(ngModel)]=\"selectedRole\" (selectionChange)=\"filterUsers()\">\n                        <mat-option value=\"all\">All</mat-option>\n                        <mat-option *ngFor=\"let role of rolesList\" [value]=\"role.id\">{{role.value}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" class=\"form-fields\">\n                    <mat-label>Status</mat-label>\n                    <mat-select name=\"status\" [(ngModel)]=\"selectedStatus\" (selectionChange)=\"filterUsers()\">\n                        <mat-option value=\"all\">All</mat-option>\n                        <mat-option [value]=\"true\">Active</mat-option>\n                        <mat-option [value]=\"false\">Inactive</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n            <div class=\"select-filter search\">\n                <mat-form-field style=\"width: 80%;\" appearance=\"outline\">\n                    <mat-icon matPrefix class=\"search-icon\">search</mat-icon>\n                    <button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearInput()\" *ngIf=\"searchInput.length > 0\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <input matInput placeholder=\"Search user\" #input [(ngModel)]=\"searchInput\"\n                        (input)=\"filterUsers()\">\n                </mat-form-field>\n\n                <div class=\"header-button\">\n                    <button mat-raised-button color=\"primary\" (click)=\"resetFilters()\" [disabled]=\"handleReset()\">\n                        <mat-icon class=\"add-icon\" fontSet=\"material-icons-outlined\">refresh</mat-icon>\n                        RESET FILTERS</button>\n                </div>\n            </div>\n\n            <div class=\"table-section\" class=\"mat-elevation-z8\">\n                <mat-table mat-table [dataSource]=\"dataSource\" matSort [@.disabled]=\"true\" aria-describedby=\"usersList\">\n\n                    // Name Column\n                    <ng-container matColumnDef=\"userName\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header [style.background-color]=\"color\"> Full Name\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"mat-body-2\" [matTooltip]=\"row.userName\" matTooltipPosition=\"left\"\n                        [matTooltipDisabled]=\"row.userName.length <= 20\">\n                            {{row.userName && (row.userName.length>20)? (row.userName | slice:0:20)+'...': row.userName}}\n                        </mat-cell>\n\n                    </ng-container>\n\n                    // Organization Column\n                    <ng-container matColumnDef=\"organization\">\n                        <mat-header-cell *matHeaderCellDef [style.background-color]=\"color\"> Organization\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"mat-body-2\"> {{row.organization}} </mat-cell>\n                    </ng-container>\n\n                    // Role Column\n                    <ng-container matColumnDef=\"role\">\n                        <mat-header-cell *matHeaderCellDef [style.background-color]=\"color\"> Role </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"mat-body-2\">\n                            {{row.role}}\n                        </mat-cell>\n                    </ng-container>\n\n                    // Mobile Number Column\n                    <ng-container matColumnDef=\"mobileNumber\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header [style.background-color]=\"color\"> Mobile #\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"mat-body-2\">\n                            {{row.mobileNumber}}\n                        </mat-cell>\n                    </ng-container>\n\n                    // Status Column\n                    <ng-container matColumnDef=\"status\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header [style.background-color]=\"color\"> Status\n                        </mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\" class=\"mat-body-2\">\n                            <mat-slide-toggle color=\"primary\" [checked]=\"row.status\"\n                                (change)=\"patchUserStatus(row, $event)\" *ngIf=\"loggedInRole == '6868009'\">\n                                <span style=\"padding-left: 12px;\">{{row.statusText}}</span>\n                            </mat-slide-toggle>\n                            <span *ngIf=\"loggedInRole != '6868009'\">{{row.statusText}}</span>\n                        </mat-cell>\n\n                    </ng-container>\n\n                    // Edit Column\n                    <ng-container matColumnDef=\"edit\" stickyEnd style=\"padding-right: 5px;\"\n                        *ngIf=\"loggedInRole == '6868009'\">\n                        <mat-header-cell *matHeaderCellDef aria-label=\"row actions\">&nbsp;</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\">\n                            <mat-icon color=\"primary\" (click)=\"openEditUserDialog(row.id)\">edit</mat-icon>\n                        </mat-cell>\n                    </ng-container>\n\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n                </mat-table>\n                <div class=\"no-content-text\" *ngIf=\"dataSource.data.length == 0\" mdcBody1>\n                   {{ tableData.length == 0 ? \"No user registered yet, please click on ADD USER button to register a user.\" : \"No results found\" }}\n                  </div>\n                <hr style=\"margin-top: 0px;margin-bottom: 0px;\">\n                <mat-paginator [pageSize]=\"25\" [pageSizeOptions]=\"[25, 50, 75, 100]\" aria-label=\"Select page of users\"\n                    aria-label=\"Select page of users\" showFirstLastButtons></mat-paginator>\n            </div>\n\n        </mat-card-content>\n    </mat-card>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { UserRoutingModule } from './userManagement-routing.module';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\n\n@NgModule({\n  declarations: [\n    UserListComponent\n  ],\n  imports: [\n    UserRoutingModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatPaginatorModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatTooltipModule\n\n  ]\n})\nexport class UserManagementModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserListComponent } from './user-list/user-list.component';\n\n\n\n\n\nconst routes: Routes = [\n  {path:'', redirectTo:'list',pathMatch:'full'},\n  {path: 'list',component: UserListComponent},\n  {path: '**', redirectTo:'/main/users/list'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class UserRoutingModule { \n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}